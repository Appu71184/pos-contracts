{
  "contractName": "BlockRewardAuRaCoins",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "snapshotPoolTotalStakeAmount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_bridgesAllowed",
          "type": "address[]"
        }
      ],
      "name": "setErcToNativeBridgesAllowed",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "epochPoolNativeReward",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_rewardToDistribute",
          "type": "uint256"
        },
        {
          "name": "_blocksCreatedShareNum",
          "type": "uint256[]"
        },
        {
          "name": "_blocksCreatedShareDenom",
          "type": "uint256"
        },
        {
          "name": "_stakingEpoch",
          "type": "uint256"
        }
      ],
      "name": "currentPoolRewards",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "addBridgeNativeRewardReceivers",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "blockRewardContractId",
      "outputs": [
        {
          "name": "",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_stakingContract",
          "type": "address"
        },
        {
          "name": "_stakingEpoch",
          "type": "uint256"
        },
        {
          "name": "_totalRewardShareNum",
          "type": "uint256"
        },
        {
          "name": "_totalRewardShareDenom",
          "type": "uint256"
        },
        {
          "name": "_validators",
          "type": "uint256[]"
        }
      ],
      "name": "currentNativeRewardToDistribute",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "mintedForAccountInBlock",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isInitialized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "NATIVE_COIN_INFLATION_RATE",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_poolId",
          "type": "uint256"
        }
      ],
      "name": "validatorRewardPercent",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "mintedForAccount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ercToNativeBridgesAllowed",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "mintedInBlock",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_validatorSet",
          "type": "address"
        },
        {
          "name": "_prevBlockReward",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_poolStakingAddress",
          "type": "address"
        },
        {
          "name": "_staker",
          "type": "address"
        }
      ],
      "name": "epochsToClaimRewardFrom",
      "outputs": [
        {
          "name": "epochsToClaimFrom",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "addBridgeNativeFeeReceivers",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "mintedTotally",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_stakingEpoch",
          "type": "uint256"
        },
        {
          "name": "_delegatorStaked",
          "type": "uint256"
        },
        {
          "name": "_validatorStaked",
          "type": "uint256"
        },
        {
          "name": "_totalStaked",
          "type": "uint256"
        },
        {
          "name": "_poolReward",
          "type": "uint256"
        }
      ],
      "name": "delegatorShare",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "snapshotPoolValidatorStakeAmount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_stakingEpoch",
          "type": "uint256"
        },
        {
          "name": "_validatorStaked",
          "type": "uint256"
        },
        {
          "name": "_totalStaked",
          "type": "uint256"
        },
        {
          "name": "_poolReward",
          "type": "uint256"
        }
      ],
      "name": "validatorShare",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onTokenTransfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "extraReceiversQueueSize",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "addExtraReceiver",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "bridgeNativeReward",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "nativeRewardUndistributed",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "mintedTotallyByBridge",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "clearBlocksCreated",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "validatorMinRewardPercent",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "validatorSetContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_poolId",
          "type": "uint256"
        }
      ],
      "name": "epochsPoolGotRewardFor",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "blocksCreated",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "benefactors",
          "type": "address[]"
        },
        {
          "name": "kind",
          "type": "uint16[]"
        }
      ],
      "name": "reward",
      "outputs": [
        {
          "name": "receiversNative",
          "type": "address[]"
        },
        {
          "name": "rewardsNative",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "bridge",
          "type": "address"
        }
      ],
      "name": "AddedReceiver",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "cumulativeAmount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "bridge",
          "type": "address"
        }
      ],
      "name": "BridgeNativeRewardAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "receivers",
          "type": "address[]"
        },
        {
          "indexed": false,
          "name": "rewards",
          "type": "uint256[]"
        }
      ],
      "name": "MintedNative",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_nativeCoins",
          "type": "uint256"
        },
        {
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "transferReward",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_delegatorStake",
          "type": "uint256"
        },
        {
          "name": "_stakingEpoch",
          "type": "uint256"
        },
        {
          "name": "_poolId",
          "type": "uint256"
        }
      ],
      "name": "getDelegatorReward",
      "outputs": [
        {
          "name": "nativeReward",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_stakingEpoch",
          "type": "uint256"
        },
        {
          "name": "_poolId",
          "type": "uint256"
        }
      ],
      "name": "getValidatorReward",
      "outputs": [
        {
          "name": "nativeReward",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"snapshotPoolTotalStakeAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_stakingEpoch\",\"type\":\"uint256\"},{\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"getValidatorReward\",\"outputs\":[{\"name\":\"nativeReward\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_bridgesAllowed\",\"type\":\"address[]\"}],\"name\":\"setErcToNativeBridgesAllowed\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"epochPoolNativeReward\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_rewardToDistribute\",\"type\":\"uint256\"},{\"name\":\"_blocksCreatedShareNum\",\"type\":\"uint256[]\"},{\"name\":\"_blocksCreatedShareDenom\",\"type\":\"uint256\"},{\"name\":\"_stakingEpoch\",\"type\":\"uint256\"}],\"name\":\"currentPoolRewards\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addBridgeNativeRewardReceivers\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"blockRewardContractId\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_stakingContract\",\"type\":\"address\"},{\"name\":\"_stakingEpoch\",\"type\":\"uint256\"},{\"name\":\"_totalRewardShareNum\",\"type\":\"uint256\"},{\"name\":\"_totalRewardShareDenom\",\"type\":\"uint256\"},{\"name\":\"_validators\",\"type\":\"uint256[]\"}],\"name\":\"currentNativeRewardToDistribute\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mintedForAccountInBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isInitialized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"NATIVE_COIN_INFLATION_RATE\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"validatorRewardPercent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"mintedForAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ercToNativeBridgesAllowed\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mintedInBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_nativeCoins\",\"type\":\"uint256\"},{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"transferReward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_validatorSet\",\"type\":\"address\"},{\"name\":\"_prevBlockReward\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_poolStakingAddress\",\"type\":\"address\"},{\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"epochsToClaimRewardFrom\",\"outputs\":[{\"name\":\"epochsToClaimFrom\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addBridgeNativeFeeReceivers\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mintedTotally\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_stakingEpoch\",\"type\":\"uint256\"},{\"name\":\"_delegatorStaked\",\"type\":\"uint256\"},{\"name\":\"_validatorStaked\",\"type\":\"uint256\"},{\"name\":\"_totalStaked\",\"type\":\"uint256\"},{\"name\":\"_poolReward\",\"type\":\"uint256\"}],\"name\":\"delegatorShare\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"snapshotPoolValidatorStakeAmount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_stakingEpoch\",\"type\":\"uint256\"},{\"name\":\"_validatorStaked\",\"type\":\"uint256\"},{\"name\":\"_totalStaked\",\"type\":\"uint256\"},{\"name\":\"_poolReward\",\"type\":\"uint256\"}],\"name\":\"validatorShare\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_delegatorStake\",\"type\":\"uint256\"},{\"name\":\"_stakingEpoch\",\"type\":\"uint256\"},{\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"getDelegatorReward\",\"outputs\":[{\"name\":\"nativeReward\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"extraReceiversQueueSize\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"addExtraReceiver\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bridgeNativeReward\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nativeRewardUndistributed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"mintedTotallyByBridge\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"clearBlocksCreated\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"validatorMinRewardPercent\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"validatorSetContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"epochsPoolGotRewardFor\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"blocksCreated\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"benefactors\",\"type\":\"address[]\"},{\"name\":\"kind\",\"type\":\"uint16[]\"}],\"name\":\"reward\",\"outputs\":[{\"name\":\"receiversNative\",\"type\":\"address[]\"},{\"name\":\"rewardsNative\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"bridge\",\"type\":\"address\"}],\"name\":\"AddedReceiver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"cumulativeAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"bridge\",\"type\":\"address\"}],\"name\":\"BridgeNativeRewardAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"receivers\",\"type\":\"address[]\"},{\"indexed\":false,\"name\":\"rewards\",\"type\":\"uint256[]\"}],\"name\":\"MintedNative\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"addBridgeNativeFeeReceivers(uint256)\":{\"details\":\"An alias for `addBridgeNativeRewardReceivers` (for backward compatibility with the previous bridge contract).\"},\"addBridgeNativeRewardReceivers(uint256)\":{\"details\":\"Called by the `erc-to-native` bridge contract when a portion of the bridge fee/reward should be minted and distributed to participants (validators and their delegators) in native coins. The specified amount is used by the `_distributeRewards` function.\",\"params\":{\"_amount\":\"The fee/reward amount distributed to participants.\"}},\"addExtraReceiver(uint256,address)\":{\"details\":\"Called by the `erc-to-native` bridge contract when the bridge needs to mint a specified amount of native coins for a specified address using the `reward` function.\",\"params\":{\"_amount\":\"The amount of native coins which must be minted for the `_receiver` address.\",\"_receiver\":\"The address for which the `_amount` of native coins must be minted.\"}},\"blockRewardContractId()\":{\"details\":\"Returns an identifier for the bridge contract so that the latter could ensure it works with the BlockReward contract.\"},\"clearBlocksCreated()\":{\"details\":\"Called by the `ValidatorSetAuRa.finalizeChange` to clear the values in the `blocksCreated` mapping for the current staking epoch and a new validator set.\"},\"currentNativeRewardToDistribute(address,uint256,uint256,uint256,uint256[])\":{\"details\":\"Calculates the current total reward in native coins which is going to be distributed among validator pools once the current staking epoch finishes. Its value can differ from block to block since the reward can increase in time due to bridge's fees. Used by the `_distributeNativeRewards` internal function but can also be used by any external user.\",\"params\":{\"_stakingContract\":\"The address of StakingAuRa contract.\",\"_stakingEpoch\":\"The number of the current staking epoch.\",\"_totalRewardShareDenom\":\"The value returned by the `_rewardShareNumDenom` internal function. Set it to zero to calculate `_totalRewardShareNum` and `_totalRewardShareDenom` automatically.\",\"_totalRewardShareNum\":\"The value returned by the `_rewardShareNumDenom` internal function. Ignored if the `_totalRewardShareDenom` param is zero.\",\"_validators\":\"The array of the current validators. Leave it empty to get the array automatically.\"},\"return\":\"`uint256 rewardToDistribute` - The current total reward in native coins to distribute. `uint256 totalReward` - The current total reward in native coins. Can be greater or equal to `rewardToDistribute` depending on chain's health (how soon validator set change was finalized after beginning of staking epoch). Usually equals to `rewardToDistribute`. Used internally by the `_distributeNativeRewards` function.\"},\"currentPoolRewards(uint256,uint256[],uint256,uint256)\":{\"details\":\"Calculates and returns an array of validator pool rewards. Each returned item represents a pool reward for each corresponding item returned by `ValidatorSetAuRa.getValidators` getter. Used by the `_distributeNativeRewards` and `_distributeTokenRewards` internal functions but can also be used by any external user.\",\"params\":{\"_blocksCreatedShareDenom\":\"The value returned by the `_blocksShareNumDenom` internal function. Set it to zero to calculate `_blocksCreatedShareNum` and `_blocksCreatedShareDenom` automatically.\",\"_blocksCreatedShareNum\":\"The array returned by the `_blocksShareNumDenom` internal function. Ignored if `_blocksCreatedShareDenom` is zero.\",\"_rewardToDistribute\":\"The amount to distribute calculated by the `currentNativeRewardToDistribute` or `currentTokenRewardToDistribute` functions.\",\"_stakingEpoch\":\"The number of the current staking epoch.\"}},\"delegatorShare(uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Calculates delegator's share for the given pool reward amount and the specified staking epoch. Used by the `StakingAuRa.claimReward` function.\",\"params\":{\"_delegatorStaked\":\"The amount staked by a delegator.\",\"_poolReward\":\"The value of pool reward.\",\"_stakingEpoch\":\"The number of staking epoch.\",\"_totalStaked\":\"The total amount staked by a validator and their delegators.\",\"_validatorStaked\":\"The amount staked by a validator.\"}},\"epochsPoolGotRewardFor(uint256)\":{\"details\":\"Returns an array of epoch numbers for which the specified pool got a non-zero reward.\"},\"epochsToClaimRewardFrom(address,address)\":{\"details\":\"Returns an array of epoch numbers for which the specified staker can claim a reward from the specified pool by the `StakingAuRa.claimReward` function.\",\"params\":{\"_poolStakingAddress\":\"The pool staking address.\",\"_staker\":\"The staker's address (delegator or candidate/validator).\"}},\"ercToNativeBridgesAllowed()\":{\"details\":\"Returns the array of `erc-to-native` bridge addresses set by the `setErcToNativeBridgesAllowed` setter.\"},\"extraReceiversQueueSize()\":{\"details\":\"Returns the current size of the address queue created by the `addExtraReceiver` function.\"},\"getDelegatorReward(uint256,uint256,uint256)\":{\"details\":\"Returns the reward amount in native coins for some delegator with the specified stake amount placed into the specified pool before the specified staking epoch. Used by the `StakingAuRa.claimReward` function.\",\"params\":{\"_delegatorStake\":\"The stake amount placed by some delegator into the `_poolId` pool.\",\"_poolId\":\"The pool id.\",\"_stakingEpoch\":\"The serial number of staking epoch.\"},\"return\":\"`uint256 nativeReward` - the reward amount in native coins.\"},\"getValidatorReward(uint256,uint256)\":{\"details\":\"Returns the reward amount in native coins for the specified validator and for the specified staking epoch. Used by the `StakingAuRa.claimReward` function.\",\"params\":{\"_poolId\":\"The pool id.\",\"_stakingEpoch\":\"The serial number of staking epoch.\"},\"return\":\"`uint256 nativeReward` - the reward amount in native coins.\"},\"initialize(address,address)\":{\"details\":\"Initializes the contract at network startup. Can only be called by the constructor of the `InitializerAuRa` contract or owner.\",\"params\":{\"_prevBlockReward\":\"The address of the previous BlockReward contract (for statistics migration purposes).\",\"_validatorSet\":\"The address of the `ValidatorSetAuRa` contract.\"}},\"isInitialized()\":{\"details\":\"Returns a boolean flag indicating if the `initialize` function has been called.\"},\"onTokenTransfer(address,uint256,bytes)\":{\"details\":\"Prevents sending tokens directly to the `BlockRewardAuRa` contract address by the `ERC677BridgeTokenRewardable.transferAndCall` function.\"},\"reward(address[],uint16[])\":{\"details\":\"Called by the validator's node when producing and closing a block, see https://openethereum.github.io/Block-Reward-Contract.html. This function performs all of the automatic operations needed for controlling numbers revealing by validators, accumulating block producing statistics, starting a new staking epoch, snapshotting staking amounts for the upcoming staking epoch, rewards distributing at the end of a staking epoch, and minting native coins needed for the `erc-to-native` bridge. The function has unlimited gas (according to OpenEthereum and/or Nethermind client code).\"},\"setErcToNativeBridgesAllowed(address[])\":{\"details\":\"Sets the array of `erc-to-native` bridge addresses which are allowed to call some of the functions with the `onlyErcToNativeBridge` modifier. This setter can only be called by the `owner`.\",\"params\":{\"_bridgesAllowed\":\"The array of bridge addresses.\"}},\"transferReward(uint256,address)\":{\"details\":\"Called by the `StakingAuRa.claimReward` function to transfer native coins from the balance of the `BlockRewardAuRa` contract to the specified address as a reward.\",\"params\":{\"_nativeCoins\":\"The amount of native coins to transfer as a reward.\",\"_to\":\"The target address to transfer the amounts to.\"}},\"validatorRewardPercent(uint256)\":{\"details\":\"Returns the reward coefficient for the specified validator. The given value should be divided by 10000 to get the value of the reward percent (since EVM doesn't support float values). If the specified pool id is an id of a candidate that is not about to be a validator on the current staking epoch, the potentially possible reward coefficient is returned.\",\"params\":{\"_poolId\":\"The id of the validator/candidate pool for which the getter must return the coefficient.\"}},\"validatorShare(uint256,uint256,uint256,uint256)\":{\"details\":\"Calculates validator's share for the given pool reward amount and the specified staking epoch. Used by the `validatorRewardPercent` and `StakingAuRa.claimReward` functions.\",\"params\":{\"_poolReward\":\"The value of pool reward.\",\"_stakingEpoch\":\"The number of staking epoch.\",\"_totalStaked\":\"The total amount staked by a validator and their delegators.\",\"_validatorStaked\":\"The amount staked by a validator.\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/akshaypatil/Documents/etherlite/pos-contracts/posdao-etherlite/contracts/base/BlockRewardAuRaCoins.sol\":\"BlockRewardAuRaCoins\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/akshaypatil/Documents/etherlite/pos-contracts/posdao-etherlite/contracts/base/BlockRewardAuRaBase.sol\":{\"keccak256\":\"0x0dab742aa20095775f4cf46698c1a37324d9ac4251f519c81398ff6dcd472f04\",\"urls\":[\"bzzr://640e7540870a35b93ea60710069d2f2466c57bb382d4b20e472a7222c35afd8d\",\"dweb:/ipfs/QmeXiFfnnumJmg4VyyxL2qe1jJfQErURDk7Nb2CioqBELN\"]},\"/Users/akshaypatil/Documents/etherlite/pos-contracts/posdao-etherlite/contracts/base/BlockRewardAuRaCoins.sol\":{\"keccak256\":\"0x8922d9cb25b5cf942f6f6bf860ec883e6eeb540942e01c0621105aaab1a2bd0c\",\"urls\":[\"bzzr://425e1b7366952f502f7028e3a31b64b5d5620b6269c314d4f2510dd52d5e02c9\",\"dweb:/ipfs/QmNrWLh6dP7LfT5FiDrAA7PEYB1mVbXnWKAb8YQ6LQaRyt\"]},\"/Users/akshaypatil/Documents/etherlite/pos-contracts/posdao-etherlite/contracts/interfaces/IBlockRewardAuRa.sol\":{\"keccak256\":\"0xd8d0b6febd2efc045445b7a48d5397c31a087ea1129e21bd3dc7e44e9bc89515\",\"urls\":[\"bzzr://8f58cbe338da045bca94c5582267f64ec973a879523c2505929e36b3291b3022\",\"dweb:/ipfs/QmSjFBkLjKoe9JSY8Qe9jWzZBfemyzjym66D32JdTtTWoM\"]},\"/Users/akshaypatil/Documents/etherlite/pos-contracts/posdao-etherlite/contracts/interfaces/IBlockRewardAuRaCoins.sol\":{\"keccak256\":\"0x49845f99a4b1d63e915f4c0940720f15c08049a1d95028939924e5d36b6f1ab8\",\"urls\":[\"bzzr://d4c553defe7aba71ffbb3b843e14cdaa741d8f4f61b1c0d77f4abe289a188dd4\",\"dweb:/ipfs/QmU2TNt1N6jYgWJEtED6FQ3AiRnacN6KGtV2U6Rb7st14H\"]},\"/Users/akshaypatil/Documents/etherlite/pos-contracts/posdao-etherlite/contracts/interfaces/IERC677.sol\":{\"keccak256\":\"0x6a658fc74a9fa9dacb0da0a6e36123eeb6158b6b249e4ee84854f84f8ff72c6d\",\"urls\":[\"bzzr://04b061caacbdf049a7e38032d0790cccc2c8c7163ce3ab5406f0cd685bbe9d86\",\"dweb:/ipfs/QmXnUs1F7FaCKtaUBFnCDhpTdeNUp4VCSC1U74jHdfLoYh\"]},\"/Users/akshaypatil/Documents/etherlite/pos-contracts/posdao-etherlite/contracts/interfaces/IRandomAuRa.sol\":{\"keccak256\":\"0x66b431bcbdd999c013b0223ca0c8feb88674d90ecf68a1ccc59419c033c0c21b\",\"urls\":[\"bzzr://36604bbf54eb2220468856bb229b06caca862d6e9b69bbaf8733f53ec2ab4dd1\",\"dweb:/ipfs/QmVd3RFu4nr482o1UVGPdRXRzippd5iWyif7MPUw4hiEiP\"]},\"/Users/akshaypatil/Documents/etherlite/pos-contracts/posdao-etherlite/contracts/interfaces/IStakingAuRa.sol\":{\"keccak256\":\"0xa36b58120690351c3172ae2f9c07fa249df40461e59025a5a2c152e22235d502\",\"urls\":[\"bzzr://6096df19862e816f1f3e2717d5bc0a7a827f74df6a36c6505875f5ae08306a4f\",\"dweb:/ipfs/QmavHRDv8H4t1S2vhh9aBic5U7fpSssMqS61mg8VpTJdtu\"]},\"/Users/akshaypatil/Documents/etherlite/pos-contracts/posdao-etherlite/contracts/interfaces/IValidatorSetAuRa.sol\":{\"keccak256\":\"0x1fe05324cb277b4163cad2ce957c20806544a550832161676c067ef21b8075ac\",\"urls\":[\"bzzr://831ff6e500e6d4e164d066b4e1d4d3946e1ee9b1980125835e8b4f952d811faf\",\"dweb:/ipfs/Qmf5nFvaBT1baMMykiNFkQ15xqg1PQzkWj9g1bThuja9yS\"]},\"/Users/akshaypatil/Documents/etherlite/pos-contracts/posdao-etherlite/contracts/libs/SafeMath.sol\":{\"keccak256\":\"0xb480033e8328684139cda6d81df5177232365ea84d7eefe4f7a893db1621b694\",\"urls\":[\"bzzr://7ee15bb54eb1b521fce8721514ad86f3081ee63dd126c68ccaaf40ba887df0a1\",\"dweb:/ipfs/QmZkvLwQQmc3vmX7hhN4ru6BSxCw8Eghg7yDSKPrqZswVw\"]},\"/Users/akshaypatil/Documents/etherlite/pos-contracts/posdao-etherlite/contracts/upgradeability/UpgradeabilityAdmin.sol\":{\"keccak256\":\"0x9addb17fda1bc4c4f8ba64e929be2acdb29472f9d3cfe18491852c0617d20169\",\"urls\":[\"bzzr://c0af15280f0b0edeedb355bea94acfaa3142e361b61f8356937ca1b039f131dd\",\"dweb:/ipfs/QmRmtnWMBvXYFBNppWcEdVTakMwPgqB4JhnXgMuT48yEou\"]},\"/Users/akshaypatil/Documents/etherlite/pos-contracts/posdao-etherlite/contracts/upgradeability/UpgradeableOwned.sol\":{\"keccak256\":\"0x73510448e23835a18719cd4b087f66c839bcb2d6b11b5a82e84f0a5e4ed6ad78\",\"urls\":[\"bzzr://302da89b7ac42ede7da35b64062e44ed04e1bdbd6066972dfa342445b23d2cb7\",\"dweb:/ipfs/QmTYnqfmNRdAz2QQhZAZcFRV8a34eBhmFfN9gXx9xRAKTr\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506153b3806100206000396000f3fe60806040526004361061020f5760003560e01c80635325138911610118578063ac8a0942116100a0578063cdf7a0901161006f578063cdf7a09014610ed1578063dfc8bf4e14610f20578063e7f6cfe214610f77578063f8fdc6b914611007578063f91c2898146110605761020f565b8063ac8a094214610dff578063adc481a714610e2a578063b4a523e814610e55578063c5dd762814610eba5761020f565b80638737929a116100e75780638737929a14610b9f578063877ffdea14610c0c578063a4c0ed3614610c6f578063a9add57d14610d79578063aa9fa27414610da45761020f565b80635325138914610a69578063553a5c8514610aa45780635fba554e14610acf578063727b071d14610b465761020f565b8063392e53cd1161019b578063419ce2641161016a578063419ce2641461081c5780634476d66a14610888578063469507c6146108d7578063485cc955146109325780634de6c036146109a35761020f565b8063392e53cd1461070e57806339f537091461073d5780633bf47e96146107685780633d84b8c1146107b75761020f565b8063212329f3116101e2578063212329f3146103a5578063222fafb2146104dd5780632ee57f8d14610518578063307bff261461058157806330f6eb161461069f5761020f565b80630ac2daa0146102145780631289b1791461026d578063171d54dd146102c65780631f1a01b71461034c575b600080fd5b34801561022057600080fd5b506102576004803603604081101561023757600080fd5b8101908080359060200190929190803590602001909291905050506111d8565b6040518082815260200191505060405180910390f35b34801561027957600080fd5b506102b06004803603604081101561029057600080fd5b8101908080359060200190929190803590602001909291905050506111fd565b6040518082815260200191505060405180910390f35b3480156102d257600080fd5b5061034a600480360360208110156102e957600080fd5b810190808035906020019064010000000081111561030657600080fd5b82018360208201111561031857600080fd5b8035906020019184602083028401116401000000008311171561033a57600080fd5b909192939192939050505061128a565b005b34801561035857600080fd5b5061038f6004803603604081101561036f57600080fd5b81019080803590602001909291908035906020019092919050505061143c565b6040518082815260200191505060405180910390f35b3480156103b157600080fd5b50610486600480360360808110156103c857600080fd5b8101908080359060200190929190803590602001906401000000008111156103ef57600080fd5b82018360208201111561040157600080fd5b8035906020019184602083028401116401000000008311171561042357600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919080359060200190929190505050611461565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156104c95780820151818401526020810190506104ae565b505050509050019250505060405180910390f35b3480156104e957600080fd5b506105166004803603602081101561050057600080fd5b8101908080359060200190929190505050611590565b005b34801561052457600080fd5b5061052d61166a565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b34801561058d57600080fd5b50610682600480360360a08110156105a457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190929190803590602001906401000000008111156105ff57600080fd5b82018360208201111561061157600080fd5b8035906020019184602083028401116401000000008311171561063357600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050611679565b604051808381526020018281526020019250505060405180910390f35b3480156106ab57600080fd5b506106f8600480360360408110156106c257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061169f565b6040518082815260200191505060405180910390f35b34801561071a57600080fd5b506107236116c4565b604051808215151515815260200191505060405180910390f35b34801561074957600080fd5b5061075261171d565b6040518082815260200191505060405180910390f35b34801561077457600080fd5b506107a16004803603602081101561078b57600080fd5b8101908080359060200190929190505050611728565b6040518082815260200191505060405180910390f35b3480156107c357600080fd5b50610806600480360360208110156107da57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611eb8565b6040518082815260200191505060405180910390f35b34801561082857600080fd5b50610831611ed0565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610874578082015181840152602081019050610859565b505050509050019250505060405180910390f35b34801561089457600080fd5b506108c1600480360360208110156108ab57600080fd5b8101908080359060200190929190505050611f5e565b6040518082815260200191505060405180910390f35b3480156108e357600080fd5b50610930600480360360408110156108fa57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f76565b005b34801561093e57600080fd5b506109a16004803603604081101561095557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061205e565b005b3480156109af57600080fd5b50610a12600480360360408110156109c657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061219a565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610a55578082015181840152602081019050610a3a565b505050509050019250505060405180910390f35b348015610a7557600080fd5b50610aa260048036036020811015610a8c57600080fd5b810190808035906020019092919050505061284a565b005b348015610ab057600080fd5b50610ab9612856565b6040518082815260200191505060405180910390f35b348015610adb57600080fd5b50610b30600480360360a0811015610af257600080fd5b81019080803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919050505061285c565b6040518082815260200191505060405180910390f35b348015610b5257600080fd5b50610b8960048036036040811015610b6957600080fd5b810190808035906020019092919080359060200190929190505050612902565b6040518082815260200191505060405180910390f35b348015610bab57600080fd5b50610bf660048036036080811015610bc257600080fd5b8101908080359060200190929190803590602001909291908035906020019092919080359060200190929190505050612927565b6040518082815260200191505060405180910390f35b348015610c1857600080fd5b50610c5960048036036060811015610c2f57600080fd5b810190808035906020019092919080359060200190929190803590602001909291905050506129ba565b6040518082815260200191505060405180910390f35b348015610c7b57600080fd5b50610d5f60048036036060811015610c9257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610cd957600080fd5b820183602082011115610ceb57600080fd5b80359060200191846001830284011164010000000083111715610d0d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612a49565b604051808215151515815260200191505060405180910390f35b348015610d8557600080fd5b50610d8e612a50565b6040518082815260200191505060405180910390f35b348015610db057600080fd5b50610dfd60048036036040811015610dc757600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612a61565b005b348015610e0b57600080fd5b50610e14612b52565b6040518082815260200191505060405180910390f35b348015610e3657600080fd5b50610e3f612b58565b6040518082815260200191505060405180910390f35b348015610e6157600080fd5b50610ea460048036036020811015610e7857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612b5e565b6040518082815260200191505060405180910390f35b348015610ec657600080fd5b50610ecf612b76565b005b348015610edd57600080fd5b50610f0a60048036036020811015610ef457600080fd5b8101908080359060200190929190505050612e58565b6040518082815260200191505060405180910390f35b348015610f2c57600080fd5b50610f35612e70565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610f8357600080fd5b50610fb060048036036020811015610f9a57600080fd5b8101908080359060200190929190505050612e96565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610ff3578082015181840152602081019050610fd8565b505050509050019250505060405180910390f35b34801561101357600080fd5b5061104a6004803603604081101561102a57600080fd5b810190808035906020019092919080359060200190929190505050612f00565b6040518082815260200191505060405180910390f35b34801561106c57600080fd5b506111396004803603604081101561108357600080fd5b81019080803590602001906401000000008111156110a057600080fd5b8201836020820111156110b257600080fd5b803590602001918460208302840111640100000000831117156110d457600080fd5b9091929391929390803590602001906401000000008111156110f557600080fd5b82018360208201111561110757600080fd5b8035906020019184602083028401116401000000008311171561112957600080fd5b9091929391929390505050612f24565b604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b83811015611180578082015181840152602081019050611165565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156111c25780820151818401526020810190506111a7565b5050505090500194505050505060405180910390f35b6029602052816000526040600020602052806000526040600020600091509150505481565b600080602a600085815260200190815260200160002060008481526020019081526020016000205490506000602960008681526020019081526020016000206000858152602001908152602001600020549050611280858383602260008a8152602001908152602001600020600089815260200190815260200160002054612927565b9250505092915050565b611292613c8c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112c957600080fd5b6112d16116c4565b6112da57600080fd5b60008090505b600280549050811015611389576000600160006002848154811061130057fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080806001019150506112e0565b82826002919061139a929190615241565b50600090505b828290508110156114375760018060008585858181106113bc57fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080806001019150506113a0565b505050565b6022602052816000526040600020602052806000526040600020600091509150505481565b60608060008414156114b0576114a78360006040519080825280602002602001820160405280156114a15781602001602082028038833980820191505090505b50613cbd565b80955081965050505b60008614806114bf5750600084145b156114fc5760006040519080825280602002602001820160405280156114f45781602001602082028038833980820191505090505b509050611584565b845160405190808252806020026020018201604052801561152c5781602001602082028038833980820191505090505b50905060008090505b8551811015611582578486828151811061154b57fe5b602002602001015188028161155c57fe5b0482828151811061156957fe5b6020026020010181815250508080600101915050611535565b505b80915050949350505050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166115e657600080fd5b60008114156115f457600080fd5b61160981602154613f9f90919063ffffffff16565b6021819055503373ffffffffffffffffffffffffffffffffffffffff167f619cc90cbd264bea3dfc113e68fd307789a937a8c10ef4b0110607ac7490367382602154604051808381526020018281526020019250505060405180910390a250565b6000630d35a7ca60e01b905090565b6000806116916116898785613fbe565b888787613fda565b915091509550959350505050565b6024602052816000526040600020602052806000526040600020600091509150505481565b60008073ffffffffffffffffffffffffffffffffffffffff16602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415905090565b660d529ae9e8600081565b600080602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ee99205c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561179357600080fd5b505afa1580156117a7573d6000803e3d6000fd5b505050506040513d60208110156117bd57600080fd5b8101908080519060200190929190505050905060008173ffffffffffffffffffffffffffffffffffffffff1663794c0c686040518163ffffffff1660e01b815260040160206040518083038186803b15801561181857600080fd5b505afa15801561182c573d6000803e3d6000fd5b505050506040513d602081101561184257600080fd5b81019080805190602001909291905050509050600081141561186957600092505050611eb3565b602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639b4a14bf856040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156118dc57600080fd5b505afa1580156118f0573d6000803e3d6000fd5b505050506040513d602081101561190657600080fd5b81019080805190602001909291905050501561197c5761197381602a600084815260200190815260200160002060008781526020019081526020016000205460296000858152602001908152602001600020600088815260200190815260200160002054620f4240612927565b92505050611eb3565b6000602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b927ef436040518163ffffffff1660e01b815260040160206040518083038186803b1580156119e657600080fd5b505afa1580156119fa573d6000803e3d6000fd5b505050506040513d6020811015611a1057600080fd5b81019080805190602001909291905050501415611d545760606000602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636729c2dc6040518163ffffffff1660e01b815260040160006040518083038186803b158015611a9357600080fd5b505afa158015611aa7573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015611ad157600080fd5b810190808051640100000000811115611ae957600080fd5b82810190506020810184811115611aff57600080fd5b8151856020820283011164010000000082111715611b1c57600080fd5b50509291905050509150600090505b8151811015611bbe57818181518110611b4057fe5b6020026020010151861415611bb157611ba683602a60008681526020019081526020016000206000898152602001908152602001600020546029600087815260200190815260200160002060008a815260200190815260200160002054620f4240612927565b945050505050611eb3565b8080600101915050611b2b565b602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630bf480c06040518163ffffffff1660e01b815260040160006040518083038186803b158015611c2657600080fd5b505afa158015611c3a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015611c6457600080fd5b810190808051640100000000811115611c7c57600080fd5b82810190506020810184811115611c9257600080fd5b8151856020820283011164010000000082111715611caf57600080fd5b50509291905050509150600090505b8151811015611d5157818181518110611cd357fe5b6020026020010151861415611d4457611d3983602a60008681526020019081526020016000206000898152602001908152602001600020546029600087815260200190815260200160002060008a815260200190815260200160002054620f4240612927565b945050505050611eb3565b8080600101915050611cbe565b50505b611eae818373ffffffffffffffffffffffffffffffffffffffff16633fb1a1e48760006040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015611dde57600080fd5b505afa158015611df2573d6000803e3d6000fd5b505050506040513d6020811015611e0857600080fd5b81019080805190602001909291905050508473ffffffffffffffffffffffffffffffffffffffff16632a8f6ecd886040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015611e6a57600080fd5b505afa158015611e7e573d6000803e3d6000fd5b505050506040513d6020811015611e9457600080fd5b8101908080519060200190929190505050620f4240612927565b925050505b919050565b60236020528060005260406000206000915090505481565b60606002805480602002602001604051908101604052809291908181526020018280548015611f5457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611f0a575b5050505050905090565b60256020528060005260406000206000915090505481565b602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ee99205c6040518163ffffffff1660e01b815260040160206040518083038186803b158015611fde57600080fd5b505afa158015611ff2573d6000803e3d6000fd5b505050506040513d602081101561200857600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461205057600080fd5b61205a82826140a9565b5050565b6000612068614159565b14806120a65750612077613c8c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6120af57600080fd5b6120b76116c4565b156120c157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156120fb57600080fd5b81602c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550601e602b60008081526020019081526020016000208190555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60606000602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a26301f9856040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561223d57600080fd5b505afa158015612251573d6000803e3d6000fd5b505050506040513d602081101561226757600080fd5b81019080805190602001909291905050509050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156122b457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156122ee57600080fd5b60008114156122fc57600080fd5b6000602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ee99205c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561236657600080fd5b505afa15801561237a573d6000803e3d6000fd5b505050506040513d602081101561239057600080fd5b8101908080519060200190929190505050905060008573ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614156123e05760006123e2565b845b9050600080600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146125e6578373ffffffffffffffffffffffffffffffffffffffff166327d89b3a86856040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b1580156124a057600080fd5b505afa1580156124b4573d6000803e3d6000fd5b505050506040513d60208110156124ca57600080fd5b8101908080519060200190929190505050915060008214156125235760006040519080825280602002602001820160405280156125165781602001602082028038833980820191505090505b5095505050505050612844565b8373ffffffffffffffffffffffffffffffffffffffff1663381883b086856040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b1580156125a857600080fd5b505afa1580156125bc573d6000803e3d6000fd5b505050506040513d60208110156125d257600080fd5b810190808051906020019092919050505090505b600080600087815260200190815260200160002090506000818054905090506060816040519080825280602002602001820160405280156126365781602001602082028038833980820191505090505b509050600080905060008090505b838110156127c157600085828154811061265a57fe5b90600052602060002001549050600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff16146126c657878110156126a957506127b4565b8087111580156126ba575060008714155b156126c557506127c1565b5b8973ffffffffffffffffffffffffffffffffffffffff1663186dc46f8c8b846040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060206040518083038186803b15801561275357600080fd5b505afa158015612767573d6000803e3d6000fd5b505050506040513d602081101561277d57600080fd5b81019080805190602001909291905050506127b257808484806001019550815181106127a557fe5b6020026020010181815250505b505b8080600101915050612644565b816040519080825280602002602001820160405280156127f05781602001602082028038833980820191505090505b509a50600090505b818110156128395782818151811061280c57fe5b60200260200101518b828151811061282057fe5b60200260200101818152505080806001019150506127f8565b505050505050505050505b92915050565b61285381611590565b50565b60265481565b60008085148061286c5750600084145b806128775750600083145b1561288557600090506128f9565b600080905060008585101561289b57600061289f565b8585035b90506000602b60008a815260200190815260200160002054905080820281606403880211156128db5785888602816128d357fe5b0492506128f2565b606482028160640389870202816128ee57fe5b0492505b8293505050505b95945050505050565b602a602052816000526040600020602052806000526040600020600091509150505481565b6000808414806129375750600083145b1561294557600090506129b2565b600080905060008585101561295b57600061295f565b8585035b90506000602b6000898152602001908152602001600020549050808202816064038802111561299b57858786028161299357fe5b0492506129ab565b6064818602816129a757fe5b0492505b8293505050505b949350505050565b600080602a600085815260200190815260200160002060008481526020019081526020016000205490506000602960008681526020019081526020016000206000858152602001908152602001600020549050612a3e85878484602260008b815260200190815260200160002060008a81526020019081526020016000205461285c565b925050509392505050565b6000806000fd5b600060045460016005540103905090565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16612ab757600080fd5b6000821415612ac557600080fd5b600360149054906101000a900460ff16612ade57600080fd5b612ae9828233614161565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f3c798bbcf33115b42c728b8504cff11dd58736e9fa789f1cda2738db7d696b2a846040518082815260200191505060405180910390a35050565b60215481565b60285481565b60276020528060005260406000206000915090505481565b602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612bd057600080fd5b6000602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ee99205c6040518163ffffffff1660e01b815260040160206040518083038186803b158015612c3a57600080fd5b505afa158015612c4e573d6000803e3d6000fd5b505050506040513d6020811015612c6457600080fd5b8101908080519060200190929190505050905060008173ffffffffffffffffffffffffffffffffffffffff1663794c0c686040518163ffffffff1660e01b815260040160206040518083038186803b158015612cbf57600080fd5b505afa158015612cd3573d6000803e3d6000fd5b505050506040513d6020811015612ce957600080fd5b810190808051906020019092919050505090506060602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe54477e6040518163ffffffff1660e01b815260040160006040518083038186803b158015612d6657600080fd5b505afa158015612d7a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015612da457600080fd5b810190808051640100000000811115612dbc57600080fd5b82810190506020810184811115612dd257600080fd5b8151856020820283011164010000000082111715612def57600080fd5b5050929190505050905060008090505b8151811015612e52576000602060008581526020019081526020016000206000848481518110612e2b57fe5b60200260200101518152602001908152602001600020819055508080600101915050612dff565b50505050565b602b6020528060005260406000206000915090505481565b602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600080838152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015612ef457602002820191906000526020600020905b815481526020019060010190808311612ee0575b50505050509050919050565b60208052816000526040600020602052806000526040600020600091509150505481565b60608073fffffffffffffffffffffffffffffffffffffffe73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612f7357600080fd5b8383905086869050141580612f8c575060018686905014155b80612fb35750600084846000818110612fa157fe5b9050602002013561ffff1661ffff1614155b15613029576000604051908082528060200260200182016040528015612fe85781602001602082028038833980820191505090505b5060006040519080825280602002602001820160405280156130195781602001602082028038833980820191505090505b5081915080905091509150613c83565b600073ffffffffffffffffffffffffffffffffffffffff16602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806131865750602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663facd743b878760008181106130cc57fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561314957600080fd5b505afa15801561315d573d6000803e3d6000fd5b505050506040513d602081101561317357600080fd5b8101908080519060200190929190505050155b156131fc5760006040519080825280602002602001820160405280156131bb5781602001602082028038833980820191505090505b5060006040519080825280602002602001820160405280156131ec5781602001602082028038833980820191505090505b5081915080905091509150613c83565b602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ccf69e9b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561326457600080fd5b505afa158015613278573d6000803e3d6000fd5b505050506040513d602081101561328e57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1663109c11076040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156132e657600080fd5b505af11580156132fa573d6000803e3d6000fd5b50505050600360149054906101000a900460ff1661334657600160048190555060006005819055506001600360146101000a81548160ff02191690831515021790555061334561426d565b5b6000606490506000602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ee99205c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156133b657600080fd5b505afa1580156133ca573d6000803e3d6000fd5b505050506040513d60208110156133e057600080fd5b8101908080519060200190929190505050905060008173ffffffffffffffffffffffffffffffffffffffff1663794c0c686040518163ffffffff1660e01b815260040160206040518083038186803b15801561343b57600080fd5b505afa15801561344f573d6000803e3d6000fd5b505050506040513d602081101561346557600080fd5b8101908080519060200190929190505050905060008273ffffffffffffffffffffffffffffffffffffffff16638c2243ae6040518163ffffffff1660e01b815260040160206040518083038186803b1580156134c057600080fd5b505afa1580156134d4573d6000803e3d6000fd5b505050506040513d60208110156134ea57600080fd5b8101908080519060200190929190505050905060008090506000602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b927ef436040518163ffffffff1660e01b815260040160206040518083038186803b15801561356c57600080fd5b505afa158015613580573d6000803e3d6000fd5b505050506040513d602081101561359657600080fd5b81019080805190602001909291905050501461380057600083141580156136bd5750602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a92252ae8c8c600081811061360357fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561368057600080fd5b505afa158015613694573d6000803e3d6000fd5b505050506040513d60208110156136aa57600080fd5b8101908080519060200190929190505050155b156137ff576000602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632bbb7b728d8d600081811061370f57fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561378c57600080fd5b505afa1580156137a0573d6000803e3d6000fd5b505050506040513d60208110156137b657600080fd5b8101908080519060200190929190505050905060206000858152602001908152602001600020600082815260200190815260200160002060008154809291906001019190505550505b5b81613809614159565b1415613c6f5760008314613825576138228484846144fe565b90505b602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635ccee1de6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561388f57600080fd5b505af11580156138a3573d6000803e3d6000fd5b505050506000806001850190506060602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636729c2dc6040518163ffffffff1660e01b815260040160006040518083038186803b15801561391a57600080fd5b505afa15801561392e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561395857600080fd5b81019080805164010000000081111561397057600080fd5b8281019050602081018481111561398657600080fd5b81518560208202830111640100000000821117156139a357600080fd5b50509291905050509050600092505b80518310156139e6576139d987838386815181106139cc57fe5b602002602001015161464c565b82806001019350506139b2565b602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe54477e6040518163ffffffff1660e01b815260040160006040518083038186803b158015613a4e57600080fd5b505afa158015613a62573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015613a8c57600080fd5b810190808051640100000000811115613aa457600080fd5b82810190506020810184811115613aba57600080fd5b8151856020820283011164010000000082111715613ad757600080fd5b50509291905050509050600092505b8051831015613b1a57613b0d8783838681518110613b0057fe5b602002602001015161464c565b8280600101935050613ae6565b602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630bf480c06040518163ffffffff1660e01b815260040160006040518083038186803b158015613b8257600080fd5b505afa158015613b96573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015613bc057600080fd5b810190808051640100000000811115613bd857600080fd5b82810190506020810184811115613bee57600080fd5b8151856020820283011164010000000082111715613c0b57600080fd5b50509291905050509050600092505b8051831015613c4e57613c418783838681518110613c3457fe5b602002602001015161464c565b8280600101935050613c1a565b601e602b600084815260200190815260200160002081905550600097505050505b613c798186614835565b9650965050505050505b94509492505050565b6000807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b9050805491505090565b606060008083511415613dc657602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe54477e6040518163ffffffff1660e01b815260040160006040518083038186803b158015613d3257600080fd5b505afa158015613d46573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015613d7057600080fd5b810190808051640100000000811115613d8857600080fd5b82810190506020810184811115613d9e57600080fd5b8151856020820283011164010000000082111715613dbb57600080fd5b505092919050505092505b60608351604051908082528060200260200182016040528015613df85781602001602082028038833980820191505090505b509050600080905060008090505b8551811015613f8f576000868281518110613e1d57fe5b602002602001015190506000602a60008a815260200190815260200160002060008381526020019081526020016000205414158015613f075750602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634d04481e826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613eca57600080fd5b505afa158015613ede573d6000803e3d6000fd5b505050506040513d6020811015613ef457600080fd5b8101908080519060200190929190505050155b15613f4e5760206000898152602001908152602001600020600082815260200190815260200160002054848381518110613f3d57fe5b602002602001018181525050613f69565b6000848381518110613f5c57fe5b6020026020010181815250505b838281518110613f7557fe5b602002602001015183019250508080600101915050613e06565b5081819350935050509250929050565b600080828401905083811015613fb457600080fd5b8091505092915050565b6000613fca8383614aa4565b6028546021540101905092915050565b600080600083141561407957614070858673ffffffffffffffffffffffffffffffffffffffff16638c2243ae6040518163ffffffff1660e01b815260040160206040518083038186803b15801561403057600080fd5b505afa158015614044573d6000803e3d6000fd5b505050506040513d602081101561405a57600080fd5b8101908080519060200190929190505050614ac0565b80945081955050505b60008084141561408a576000614097565b838588028161409557fe5b045b90508087925092505094509492505050565b600082141580156140ec57508073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050155b156141555781816040516140ff906152e1565b808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506040518091039082f080158015614150573d6000803e3d6000fd5b509050505b5050565b600043905090565b6000600160055401905060405180606001604052808581526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff16815250600660008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508060058190555050505050565b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156142c9576144fc565b60008090505b600280549050811015614443576000600282815481106142eb57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b4a523e8826040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156143b757600080fd5b505afa1580156143cb573d6000803e3d6000fd5b505050506040513d60208110156143e157600080fd5b8101908080519060200190929190505050602760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806001019150506142cf565b506000600280549050146144fb57600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663553a5c856040518163ffffffff1660e01b815260040160206040518083038186803b1580156144b957600080fd5b505afa1580156144cd573d6000803e3d6000fd5b505050506040513d60208110156144e357600080fd5b81019080805190602001909291905050506026819055505b5b565b60006060602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe54477e6040518163ffffffff1660e01b815260040160006040518083038186803b15801561456a57600080fd5b505afa15801561457e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156145a857600080fd5b8101908080516401000000008111156145c057600080fd5b828101905060208101848111156145d657600080fd5b81518560208202830111640100000000821117156145f357600080fd5b5050929190505050905060008061460a8786614ac0565b915091506060600061461c8886613cbd565b9150915061462f89898686898787614ce4565b955061464089898686898787614e34565b50505050509392505050565b6000602960008481526020019081526020016000206000838152602001908152602001600020541461467d57614830565b60008373ffffffffffffffffffffffffffffffffffffffff16632a8f6ecd836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156146d057600080fd5b505afa1580156146e4573d6000803e3d6000fd5b505050506040513d60208110156146fa57600080fd5b81019080805190602001909291905050509050600081141561471c5750614830565b80602960008581526020019081526020016000206000848152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff16633fb1a1e48360006040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b1580156147cb57600080fd5b505afa1580156147df573d6000803e3d6000fd5b505050506040513d60208110156147f557600080fd5b8101908080519060200190929190505050602a6000858152602001908152602001600020600084815260200190815260200160002081905550505b505050565b6060806000614842612a50565b905083811115614850578390505b600080861415905080614864576000614867565b60015b60ff16820160405190808252806020026020018201604052801561489a5781602001602082028038833980820191505090505b50935083516040519080825280602002602001820160405280156148cd5781602001602082028038833980820191505090505b50925060008090505b8281101561496c5760008060006148eb614e3d565b925092509250818885815181106148fe57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508287858151811061494557fe5b60200260200101818152505061495c838383614f79565b50505080806001019150506148d6565b5080156149d4573084838151811061498057fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050858383815181106149c757fe5b6020026020010181815250505b7f2834f3daea15e82b5f27095c4b6d08cd437f303149009a0a3304be801d2dd7ce8484604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b83811015614a3e578082015181840152602081019050614a23565b50505050905001838103825284818151815260200191508051906020019060200280838360005b83811015614a80578082015181840152602081019050614a65565b5050505090500194505050505060405180910390a183839350935050509250929050565b6000614ab88383660d529ae9e860006150ab565b905092915050565b60008060008090506000600190506000602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b927ef436040518163ffffffff1660e01b815260040160206040518083038186803b158015614b3857600080fd5b505afa158015614b4c573d6000803e3d6000fd5b505050506040513d6020811015614b6257600080fd5b8101908080519060200190929190505050905060008114614cd4576000600160036002602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663714897df6040518163ffffffff1660e01b815260040160206040518083038186803b158015614bed57600080fd5b505afa158015614c01573d6000803e3d6000fd5b505050506040513d6020811015614c1757600080fd5b81019080805190602001909291905050500281614c3057fe5b048973ffffffffffffffffffffffffffffffffffffffff16637069e7466040518163ffffffff1660e01b815260040160206040518083038186803b158015614c7757600080fd5b505afa158015614c8b573d6000803e3d6000fd5b505050506040513d6020811015614ca157600080fd5b81019080805190602001909291905050500101905080821015614cc2578091505b60018288030193506001818803019250505b8282945094505050509250929050565b6000806000614cf68a8a8a8a8a611679565b915091506000811415614d0e57600092505050614e29565b600060218190555060008090506060614d298488888e611461565b9050875181511415614e185760008090505b8851811015614e16576000898281518110614d5257fe5b60200260200101519050828281518110614d6857fe5b6020026020010151602260008f8152602001908152602001600020600083815260200190815260200160002081905550828281518110614da457fe5b6020026020010151840193506000838381518110614dbe57fe5b602002602001015114614e08576000808281526020019081526020016000208d90806001815401808255809150509060018203906000526020600020016000909192909190915055505b508080600101915050614d3b565b505b818303602881905550819450505050505b979650505050505050565b50505050505050565b60008060008060045490506000600554905081811015614e6857600094506000935060009250614f72565b600660008381526020019081526020016000206000015494506006600083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1693506006600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169250600660008381526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550506004600081548092919060010191905055505b5050909192565b6000614f83614159565b905083602460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000208190555083602360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555083602560008381526020019081526020016000206000828254019250508190555083602760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508360266000828254019250508190555050505050565b6000808214156150be576000905061523a565b6000835114156151c457602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe54477e6040518163ffffffff1660e01b815260040160006040518083038186803b15801561513057600080fd5b505afa158015615144573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561516e57600080fd5b81019080805164010000000081111561518657600080fd5b8281019050602081018481111561519c57600080fd5b81518560208202830111640100000000821117156151b957600080fd5b505092919050505092505b600080905060008090505b8451811015615221576029600087815260200190815260200160002060008683815181106151f957fe5b60200260200101518152602001908152602001600020548201915080806001019150506151cf565b50670de0b6b3a76400008382028161523557fe5b049150505b9392505050565b8280548282559060005260206000209081019282156152d0579160200282015b828111156152cf57823573ffffffffffffffffffffffffffffffffffffffff168260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190615261565b5b5090506152dd91906152ed565b5090565b604e8061533183390190565b61532d91905b8082111561532957600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055506001016152f3565b5090565b9056fe6080604052604051604e380380604e83398181016040526020811015602357600080fd5b81019080805190602001909291905050508073ffffffffffffffffffffffffffffffffffffffff16fffea265627a7a72305820a0f243b8ed274c98b355f6b770ed8002b9711101f4170fa3df2723decdab061964736f6c634300050a0032",
  "deployedBytecode": "0x60806040526004361061020f5760003560e01c80635325138911610118578063ac8a0942116100a0578063cdf7a0901161006f578063cdf7a09014610ed1578063dfc8bf4e14610f20578063e7f6cfe214610f77578063f8fdc6b914611007578063f91c2898146110605761020f565b8063ac8a094214610dff578063adc481a714610e2a578063b4a523e814610e55578063c5dd762814610eba5761020f565b80638737929a116100e75780638737929a14610b9f578063877ffdea14610c0c578063a4c0ed3614610c6f578063a9add57d14610d79578063aa9fa27414610da45761020f565b80635325138914610a69578063553a5c8514610aa45780635fba554e14610acf578063727b071d14610b465761020f565b8063392e53cd1161019b578063419ce2641161016a578063419ce2641461081c5780634476d66a14610888578063469507c6146108d7578063485cc955146109325780634de6c036146109a35761020f565b8063392e53cd1461070e57806339f537091461073d5780633bf47e96146107685780633d84b8c1146107b75761020f565b8063212329f3116101e2578063212329f3146103a5578063222fafb2146104dd5780632ee57f8d14610518578063307bff261461058157806330f6eb161461069f5761020f565b80630ac2daa0146102145780631289b1791461026d578063171d54dd146102c65780631f1a01b71461034c575b600080fd5b34801561022057600080fd5b506102576004803603604081101561023757600080fd5b8101908080359060200190929190803590602001909291905050506111d8565b6040518082815260200191505060405180910390f35b34801561027957600080fd5b506102b06004803603604081101561029057600080fd5b8101908080359060200190929190803590602001909291905050506111fd565b6040518082815260200191505060405180910390f35b3480156102d257600080fd5b5061034a600480360360208110156102e957600080fd5b810190808035906020019064010000000081111561030657600080fd5b82018360208201111561031857600080fd5b8035906020019184602083028401116401000000008311171561033a57600080fd5b909192939192939050505061128a565b005b34801561035857600080fd5b5061038f6004803603604081101561036f57600080fd5b81019080803590602001909291908035906020019092919050505061143c565b6040518082815260200191505060405180910390f35b3480156103b157600080fd5b50610486600480360360808110156103c857600080fd5b8101908080359060200190929190803590602001906401000000008111156103ef57600080fd5b82018360208201111561040157600080fd5b8035906020019184602083028401116401000000008311171561042357600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919080359060200190929190505050611461565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156104c95780820151818401526020810190506104ae565b505050509050019250505060405180910390f35b3480156104e957600080fd5b506105166004803603602081101561050057600080fd5b8101908080359060200190929190505050611590565b005b34801561052457600080fd5b5061052d61166a565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b34801561058d57600080fd5b50610682600480360360a08110156105a457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190929190803590602001906401000000008111156105ff57600080fd5b82018360208201111561061157600080fd5b8035906020019184602083028401116401000000008311171561063357600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050611679565b604051808381526020018281526020019250505060405180910390f35b3480156106ab57600080fd5b506106f8600480360360408110156106c257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061169f565b6040518082815260200191505060405180910390f35b34801561071a57600080fd5b506107236116c4565b604051808215151515815260200191505060405180910390f35b34801561074957600080fd5b5061075261171d565b6040518082815260200191505060405180910390f35b34801561077457600080fd5b506107a16004803603602081101561078b57600080fd5b8101908080359060200190929190505050611728565b6040518082815260200191505060405180910390f35b3480156107c357600080fd5b50610806600480360360208110156107da57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611eb8565b6040518082815260200191505060405180910390f35b34801561082857600080fd5b50610831611ed0565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610874578082015181840152602081019050610859565b505050509050019250505060405180910390f35b34801561089457600080fd5b506108c1600480360360208110156108ab57600080fd5b8101908080359060200190929190505050611f5e565b6040518082815260200191505060405180910390f35b3480156108e357600080fd5b50610930600480360360408110156108fa57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f76565b005b34801561093e57600080fd5b506109a16004803603604081101561095557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061205e565b005b3480156109af57600080fd5b50610a12600480360360408110156109c657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061219a565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610a55578082015181840152602081019050610a3a565b505050509050019250505060405180910390f35b348015610a7557600080fd5b50610aa260048036036020811015610a8c57600080fd5b810190808035906020019092919050505061284a565b005b348015610ab057600080fd5b50610ab9612856565b6040518082815260200191505060405180910390f35b348015610adb57600080fd5b50610b30600480360360a0811015610af257600080fd5b81019080803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919050505061285c565b6040518082815260200191505060405180910390f35b348015610b5257600080fd5b50610b8960048036036040811015610b6957600080fd5b810190808035906020019092919080359060200190929190505050612902565b6040518082815260200191505060405180910390f35b348015610bab57600080fd5b50610bf660048036036080811015610bc257600080fd5b8101908080359060200190929190803590602001909291908035906020019092919080359060200190929190505050612927565b6040518082815260200191505060405180910390f35b348015610c1857600080fd5b50610c5960048036036060811015610c2f57600080fd5b810190808035906020019092919080359060200190929190803590602001909291905050506129ba565b6040518082815260200191505060405180910390f35b348015610c7b57600080fd5b50610d5f60048036036060811015610c9257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610cd957600080fd5b820183602082011115610ceb57600080fd5b80359060200191846001830284011164010000000083111715610d0d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612a49565b604051808215151515815260200191505060405180910390f35b348015610d8557600080fd5b50610d8e612a50565b6040518082815260200191505060405180910390f35b348015610db057600080fd5b50610dfd60048036036040811015610dc757600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612a61565b005b348015610e0b57600080fd5b50610e14612b52565b6040518082815260200191505060405180910390f35b348015610e3657600080fd5b50610e3f612b58565b6040518082815260200191505060405180910390f35b348015610e6157600080fd5b50610ea460048036036020811015610e7857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612b5e565b6040518082815260200191505060405180910390f35b348015610ec657600080fd5b50610ecf612b76565b005b348015610edd57600080fd5b50610f0a60048036036020811015610ef457600080fd5b8101908080359060200190929190505050612e58565b6040518082815260200191505060405180910390f35b348015610f2c57600080fd5b50610f35612e70565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610f8357600080fd5b50610fb060048036036020811015610f9a57600080fd5b8101908080359060200190929190505050612e96565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610ff3578082015181840152602081019050610fd8565b505050509050019250505060405180910390f35b34801561101357600080fd5b5061104a6004803603604081101561102a57600080fd5b810190808035906020019092919080359060200190929190505050612f00565b6040518082815260200191505060405180910390f35b34801561106c57600080fd5b506111396004803603604081101561108357600080fd5b81019080803590602001906401000000008111156110a057600080fd5b8201836020820111156110b257600080fd5b803590602001918460208302840111640100000000831117156110d457600080fd5b9091929391929390803590602001906401000000008111156110f557600080fd5b82018360208201111561110757600080fd5b8035906020019184602083028401116401000000008311171561112957600080fd5b9091929391929390505050612f24565b604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b83811015611180578082015181840152602081019050611165565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156111c25780820151818401526020810190506111a7565b5050505090500194505050505060405180910390f35b6029602052816000526040600020602052806000526040600020600091509150505481565b600080602a600085815260200190815260200160002060008481526020019081526020016000205490506000602960008681526020019081526020016000206000858152602001908152602001600020549050611280858383602260008a8152602001908152602001600020600089815260200190815260200160002054612927565b9250505092915050565b611292613c8c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112c957600080fd5b6112d16116c4565b6112da57600080fd5b60008090505b600280549050811015611389576000600160006002848154811061130057fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080806001019150506112e0565b82826002919061139a929190615241565b50600090505b828290508110156114375760018060008585858181106113bc57fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080806001019150506113a0565b505050565b6022602052816000526040600020602052806000526040600020600091509150505481565b60608060008414156114b0576114a78360006040519080825280602002602001820160405280156114a15781602001602082028038833980820191505090505b50613cbd565b80955081965050505b60008614806114bf5750600084145b156114fc5760006040519080825280602002602001820160405280156114f45781602001602082028038833980820191505090505b509050611584565b845160405190808252806020026020018201604052801561152c5781602001602082028038833980820191505090505b50905060008090505b8551811015611582578486828151811061154b57fe5b602002602001015188028161155c57fe5b0482828151811061156957fe5b6020026020010181815250508080600101915050611535565b505b80915050949350505050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166115e657600080fd5b60008114156115f457600080fd5b61160981602154613f9f90919063ffffffff16565b6021819055503373ffffffffffffffffffffffffffffffffffffffff167f619cc90cbd264bea3dfc113e68fd307789a937a8c10ef4b0110607ac7490367382602154604051808381526020018281526020019250505060405180910390a250565b6000630d35a7ca60e01b905090565b6000806116916116898785613fbe565b888787613fda565b915091509550959350505050565b6024602052816000526040600020602052806000526040600020600091509150505481565b60008073ffffffffffffffffffffffffffffffffffffffff16602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415905090565b660d529ae9e8600081565b600080602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ee99205c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561179357600080fd5b505afa1580156117a7573d6000803e3d6000fd5b505050506040513d60208110156117bd57600080fd5b8101908080519060200190929190505050905060008173ffffffffffffffffffffffffffffffffffffffff1663794c0c686040518163ffffffff1660e01b815260040160206040518083038186803b15801561181857600080fd5b505afa15801561182c573d6000803e3d6000fd5b505050506040513d602081101561184257600080fd5b81019080805190602001909291905050509050600081141561186957600092505050611eb3565b602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639b4a14bf856040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156118dc57600080fd5b505afa1580156118f0573d6000803e3d6000fd5b505050506040513d602081101561190657600080fd5b81019080805190602001909291905050501561197c5761197381602a600084815260200190815260200160002060008781526020019081526020016000205460296000858152602001908152602001600020600088815260200190815260200160002054620f4240612927565b92505050611eb3565b6000602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b927ef436040518163ffffffff1660e01b815260040160206040518083038186803b1580156119e657600080fd5b505afa1580156119fa573d6000803e3d6000fd5b505050506040513d6020811015611a1057600080fd5b81019080805190602001909291905050501415611d545760606000602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636729c2dc6040518163ffffffff1660e01b815260040160006040518083038186803b158015611a9357600080fd5b505afa158015611aa7573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015611ad157600080fd5b810190808051640100000000811115611ae957600080fd5b82810190506020810184811115611aff57600080fd5b8151856020820283011164010000000082111715611b1c57600080fd5b50509291905050509150600090505b8151811015611bbe57818181518110611b4057fe5b6020026020010151861415611bb157611ba683602a60008681526020019081526020016000206000898152602001908152602001600020546029600087815260200190815260200160002060008a815260200190815260200160002054620f4240612927565b945050505050611eb3565b8080600101915050611b2b565b602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630bf480c06040518163ffffffff1660e01b815260040160006040518083038186803b158015611c2657600080fd5b505afa158015611c3a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015611c6457600080fd5b810190808051640100000000811115611c7c57600080fd5b82810190506020810184811115611c9257600080fd5b8151856020820283011164010000000082111715611caf57600080fd5b50509291905050509150600090505b8151811015611d5157818181518110611cd357fe5b6020026020010151861415611d4457611d3983602a60008681526020019081526020016000206000898152602001908152602001600020546029600087815260200190815260200160002060008a815260200190815260200160002054620f4240612927565b945050505050611eb3565b8080600101915050611cbe565b50505b611eae818373ffffffffffffffffffffffffffffffffffffffff16633fb1a1e48760006040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015611dde57600080fd5b505afa158015611df2573d6000803e3d6000fd5b505050506040513d6020811015611e0857600080fd5b81019080805190602001909291905050508473ffffffffffffffffffffffffffffffffffffffff16632a8f6ecd886040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015611e6a57600080fd5b505afa158015611e7e573d6000803e3d6000fd5b505050506040513d6020811015611e9457600080fd5b8101908080519060200190929190505050620f4240612927565b925050505b919050565b60236020528060005260406000206000915090505481565b60606002805480602002602001604051908101604052809291908181526020018280548015611f5457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611f0a575b5050505050905090565b60256020528060005260406000206000915090505481565b602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ee99205c6040518163ffffffff1660e01b815260040160206040518083038186803b158015611fde57600080fd5b505afa158015611ff2573d6000803e3d6000fd5b505050506040513d602081101561200857600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461205057600080fd5b61205a82826140a9565b5050565b6000612068614159565b14806120a65750612077613c8c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6120af57600080fd5b6120b76116c4565b156120c157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156120fb57600080fd5b81602c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550601e602b60008081526020019081526020016000208190555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60606000602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a26301f9856040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561223d57600080fd5b505afa158015612251573d6000803e3d6000fd5b505050506040513d602081101561226757600080fd5b81019080805190602001909291905050509050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156122b457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156122ee57600080fd5b60008114156122fc57600080fd5b6000602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ee99205c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561236657600080fd5b505afa15801561237a573d6000803e3d6000fd5b505050506040513d602081101561239057600080fd5b8101908080519060200190929190505050905060008573ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614156123e05760006123e2565b845b9050600080600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146125e6578373ffffffffffffffffffffffffffffffffffffffff166327d89b3a86856040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b1580156124a057600080fd5b505afa1580156124b4573d6000803e3d6000fd5b505050506040513d60208110156124ca57600080fd5b8101908080519060200190929190505050915060008214156125235760006040519080825280602002602001820160405280156125165781602001602082028038833980820191505090505b5095505050505050612844565b8373ffffffffffffffffffffffffffffffffffffffff1663381883b086856040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b1580156125a857600080fd5b505afa1580156125bc573d6000803e3d6000fd5b505050506040513d60208110156125d257600080fd5b810190808051906020019092919050505090505b600080600087815260200190815260200160002090506000818054905090506060816040519080825280602002602001820160405280156126365781602001602082028038833980820191505090505b509050600080905060008090505b838110156127c157600085828154811061265a57fe5b90600052602060002001549050600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff16146126c657878110156126a957506127b4565b8087111580156126ba575060008714155b156126c557506127c1565b5b8973ffffffffffffffffffffffffffffffffffffffff1663186dc46f8c8b846040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060206040518083038186803b15801561275357600080fd5b505afa158015612767573d6000803e3d6000fd5b505050506040513d602081101561277d57600080fd5b81019080805190602001909291905050506127b257808484806001019550815181106127a557fe5b6020026020010181815250505b505b8080600101915050612644565b816040519080825280602002602001820160405280156127f05781602001602082028038833980820191505090505b509a50600090505b818110156128395782818151811061280c57fe5b60200260200101518b828151811061282057fe5b60200260200101818152505080806001019150506127f8565b505050505050505050505b92915050565b61285381611590565b50565b60265481565b60008085148061286c5750600084145b806128775750600083145b1561288557600090506128f9565b600080905060008585101561289b57600061289f565b8585035b90506000602b60008a815260200190815260200160002054905080820281606403880211156128db5785888602816128d357fe5b0492506128f2565b606482028160640389870202816128ee57fe5b0492505b8293505050505b95945050505050565b602a602052816000526040600020602052806000526040600020600091509150505481565b6000808414806129375750600083145b1561294557600090506129b2565b600080905060008585101561295b57600061295f565b8585035b90506000602b6000898152602001908152602001600020549050808202816064038802111561299b57858786028161299357fe5b0492506129ab565b6064818602816129a757fe5b0492505b8293505050505b949350505050565b600080602a600085815260200190815260200160002060008481526020019081526020016000205490506000602960008681526020019081526020016000206000858152602001908152602001600020549050612a3e85878484602260008b815260200190815260200160002060008a81526020019081526020016000205461285c565b925050509392505050565b6000806000fd5b600060045460016005540103905090565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16612ab757600080fd5b6000821415612ac557600080fd5b600360149054906101000a900460ff16612ade57600080fd5b612ae9828233614161565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f3c798bbcf33115b42c728b8504cff11dd58736e9fa789f1cda2738db7d696b2a846040518082815260200191505060405180910390a35050565b60215481565b60285481565b60276020528060005260406000206000915090505481565b602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612bd057600080fd5b6000602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ee99205c6040518163ffffffff1660e01b815260040160206040518083038186803b158015612c3a57600080fd5b505afa158015612c4e573d6000803e3d6000fd5b505050506040513d6020811015612c6457600080fd5b8101908080519060200190929190505050905060008173ffffffffffffffffffffffffffffffffffffffff1663794c0c686040518163ffffffff1660e01b815260040160206040518083038186803b158015612cbf57600080fd5b505afa158015612cd3573d6000803e3d6000fd5b505050506040513d6020811015612ce957600080fd5b810190808051906020019092919050505090506060602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe54477e6040518163ffffffff1660e01b815260040160006040518083038186803b158015612d6657600080fd5b505afa158015612d7a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015612da457600080fd5b810190808051640100000000811115612dbc57600080fd5b82810190506020810184811115612dd257600080fd5b8151856020820283011164010000000082111715612def57600080fd5b5050929190505050905060008090505b8151811015612e52576000602060008581526020019081526020016000206000848481518110612e2b57fe5b60200260200101518152602001908152602001600020819055508080600101915050612dff565b50505050565b602b6020528060005260406000206000915090505481565b602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600080838152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015612ef457602002820191906000526020600020905b815481526020019060010190808311612ee0575b50505050509050919050565b60208052816000526040600020602052806000526040600020600091509150505481565b60608073fffffffffffffffffffffffffffffffffffffffe73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612f7357600080fd5b8383905086869050141580612f8c575060018686905014155b80612fb35750600084846000818110612fa157fe5b9050602002013561ffff1661ffff1614155b15613029576000604051908082528060200260200182016040528015612fe85781602001602082028038833980820191505090505b5060006040519080825280602002602001820160405280156130195781602001602082028038833980820191505090505b5081915080905091509150613c83565b600073ffffffffffffffffffffffffffffffffffffffff16602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806131865750602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663facd743b878760008181106130cc57fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561314957600080fd5b505afa15801561315d573d6000803e3d6000fd5b505050506040513d602081101561317357600080fd5b8101908080519060200190929190505050155b156131fc5760006040519080825280602002602001820160405280156131bb5781602001602082028038833980820191505090505b5060006040519080825280602002602001820160405280156131ec5781602001602082028038833980820191505090505b5081915080905091509150613c83565b602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ccf69e9b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561326457600080fd5b505afa158015613278573d6000803e3d6000fd5b505050506040513d602081101561328e57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1663109c11076040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156132e657600080fd5b505af11580156132fa573d6000803e3d6000fd5b50505050600360149054906101000a900460ff1661334657600160048190555060006005819055506001600360146101000a81548160ff02191690831515021790555061334561426d565b5b6000606490506000602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ee99205c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156133b657600080fd5b505afa1580156133ca573d6000803e3d6000fd5b505050506040513d60208110156133e057600080fd5b8101908080519060200190929190505050905060008173ffffffffffffffffffffffffffffffffffffffff1663794c0c686040518163ffffffff1660e01b815260040160206040518083038186803b15801561343b57600080fd5b505afa15801561344f573d6000803e3d6000fd5b505050506040513d602081101561346557600080fd5b8101908080519060200190929190505050905060008273ffffffffffffffffffffffffffffffffffffffff16638c2243ae6040518163ffffffff1660e01b815260040160206040518083038186803b1580156134c057600080fd5b505afa1580156134d4573d6000803e3d6000fd5b505050506040513d60208110156134ea57600080fd5b8101908080519060200190929190505050905060008090506000602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b927ef436040518163ffffffff1660e01b815260040160206040518083038186803b15801561356c57600080fd5b505afa158015613580573d6000803e3d6000fd5b505050506040513d602081101561359657600080fd5b81019080805190602001909291905050501461380057600083141580156136bd5750602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a92252ae8c8c600081811061360357fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561368057600080fd5b505afa158015613694573d6000803e3d6000fd5b505050506040513d60208110156136aa57600080fd5b8101908080519060200190929190505050155b156137ff576000602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632bbb7b728d8d600081811061370f57fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561378c57600080fd5b505afa1580156137a0573d6000803e3d6000fd5b505050506040513d60208110156137b657600080fd5b8101908080519060200190929190505050905060206000858152602001908152602001600020600082815260200190815260200160002060008154809291906001019190505550505b5b81613809614159565b1415613c6f5760008314613825576138228484846144fe565b90505b602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635ccee1de6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561388f57600080fd5b505af11580156138a3573d6000803e3d6000fd5b505050506000806001850190506060602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636729c2dc6040518163ffffffff1660e01b815260040160006040518083038186803b15801561391a57600080fd5b505afa15801561392e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561395857600080fd5b81019080805164010000000081111561397057600080fd5b8281019050602081018481111561398657600080fd5b81518560208202830111640100000000821117156139a357600080fd5b50509291905050509050600092505b80518310156139e6576139d987838386815181106139cc57fe5b602002602001015161464c565b82806001019350506139b2565b602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe54477e6040518163ffffffff1660e01b815260040160006040518083038186803b158015613a4e57600080fd5b505afa158015613a62573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015613a8c57600080fd5b810190808051640100000000811115613aa457600080fd5b82810190506020810184811115613aba57600080fd5b8151856020820283011164010000000082111715613ad757600080fd5b50509291905050509050600092505b8051831015613b1a57613b0d8783838681518110613b0057fe5b602002602001015161464c565b8280600101935050613ae6565b602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630bf480c06040518163ffffffff1660e01b815260040160006040518083038186803b158015613b8257600080fd5b505afa158015613b96573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015613bc057600080fd5b810190808051640100000000811115613bd857600080fd5b82810190506020810184811115613bee57600080fd5b8151856020820283011164010000000082111715613c0b57600080fd5b50509291905050509050600092505b8051831015613c4e57613c418783838681518110613c3457fe5b602002602001015161464c565b8280600101935050613c1a565b601e602b600084815260200190815260200160002081905550600097505050505b613c798186614835565b9650965050505050505b94509492505050565b6000807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b9050805491505090565b606060008083511415613dc657602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe54477e6040518163ffffffff1660e01b815260040160006040518083038186803b158015613d3257600080fd5b505afa158015613d46573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015613d7057600080fd5b810190808051640100000000811115613d8857600080fd5b82810190506020810184811115613d9e57600080fd5b8151856020820283011164010000000082111715613dbb57600080fd5b505092919050505092505b60608351604051908082528060200260200182016040528015613df85781602001602082028038833980820191505090505b509050600080905060008090505b8551811015613f8f576000868281518110613e1d57fe5b602002602001015190506000602a60008a815260200190815260200160002060008381526020019081526020016000205414158015613f075750602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634d04481e826040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613eca57600080fd5b505afa158015613ede573d6000803e3d6000fd5b505050506040513d6020811015613ef457600080fd5b8101908080519060200190929190505050155b15613f4e5760206000898152602001908152602001600020600082815260200190815260200160002054848381518110613f3d57fe5b602002602001018181525050613f69565b6000848381518110613f5c57fe5b6020026020010181815250505b838281518110613f7557fe5b602002602001015183019250508080600101915050613e06565b5081819350935050509250929050565b600080828401905083811015613fb457600080fd5b8091505092915050565b6000613fca8383614aa4565b6028546021540101905092915050565b600080600083141561407957614070858673ffffffffffffffffffffffffffffffffffffffff16638c2243ae6040518163ffffffff1660e01b815260040160206040518083038186803b15801561403057600080fd5b505afa158015614044573d6000803e3d6000fd5b505050506040513d602081101561405a57600080fd5b8101908080519060200190929190505050614ac0565b80945081955050505b60008084141561408a576000614097565b838588028161409557fe5b045b90508087925092505094509492505050565b600082141580156140ec57508073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050155b156141555781816040516140ff906152e1565b808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506040518091039082f080158015614150573d6000803e3d6000fd5b509050505b5050565b600043905090565b6000600160055401905060405180606001604052808581526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff16815250600660008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508060058190555050505050565b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156142c9576144fc565b60008090505b600280549050811015614443576000600282815481106142eb57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b4a523e8826040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156143b757600080fd5b505afa1580156143cb573d6000803e3d6000fd5b505050506040513d60208110156143e157600080fd5b8101908080519060200190929190505050602760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806001019150506142cf565b506000600280549050146144fb57600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663553a5c856040518163ffffffff1660e01b815260040160206040518083038186803b1580156144b957600080fd5b505afa1580156144cd573d6000803e3d6000fd5b505050506040513d60208110156144e357600080fd5b81019080805190602001909291905050506026819055505b5b565b60006060602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe54477e6040518163ffffffff1660e01b815260040160006040518083038186803b15801561456a57600080fd5b505afa15801561457e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156145a857600080fd5b8101908080516401000000008111156145c057600080fd5b828101905060208101848111156145d657600080fd5b81518560208202830111640100000000821117156145f357600080fd5b5050929190505050905060008061460a8786614ac0565b915091506060600061461c8886613cbd565b9150915061462f89898686898787614ce4565b955061464089898686898787614e34565b50505050509392505050565b6000602960008481526020019081526020016000206000838152602001908152602001600020541461467d57614830565b60008373ffffffffffffffffffffffffffffffffffffffff16632a8f6ecd836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156146d057600080fd5b505afa1580156146e4573d6000803e3d6000fd5b505050506040513d60208110156146fa57600080fd5b81019080805190602001909291905050509050600081141561471c5750614830565b80602960008581526020019081526020016000206000848152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff16633fb1a1e48360006040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b1580156147cb57600080fd5b505afa1580156147df573d6000803e3d6000fd5b505050506040513d60208110156147f557600080fd5b8101908080519060200190929190505050602a6000858152602001908152602001600020600084815260200190815260200160002081905550505b505050565b6060806000614842612a50565b905083811115614850578390505b600080861415905080614864576000614867565b60015b60ff16820160405190808252806020026020018201604052801561489a5781602001602082028038833980820191505090505b50935083516040519080825280602002602001820160405280156148cd5781602001602082028038833980820191505090505b50925060008090505b8281101561496c5760008060006148eb614e3d565b925092509250818885815181106148fe57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508287858151811061494557fe5b60200260200101818152505061495c838383614f79565b50505080806001019150506148d6565b5080156149d4573084838151811061498057fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050858383815181106149c757fe5b6020026020010181815250505b7f2834f3daea15e82b5f27095c4b6d08cd437f303149009a0a3304be801d2dd7ce8484604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b83811015614a3e578082015181840152602081019050614a23565b50505050905001838103825284818151815260200191508051906020019060200280838360005b83811015614a80578082015181840152602081019050614a65565b5050505090500194505050505060405180910390a183839350935050509250929050565b6000614ab88383660d529ae9e860006150ab565b905092915050565b60008060008090506000600190506000602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b927ef436040518163ffffffff1660e01b815260040160206040518083038186803b158015614b3857600080fd5b505afa158015614b4c573d6000803e3d6000fd5b505050506040513d6020811015614b6257600080fd5b8101908080519060200190929190505050905060008114614cd4576000600160036002602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663714897df6040518163ffffffff1660e01b815260040160206040518083038186803b158015614bed57600080fd5b505afa158015614c01573d6000803e3d6000fd5b505050506040513d6020811015614c1757600080fd5b81019080805190602001909291905050500281614c3057fe5b048973ffffffffffffffffffffffffffffffffffffffff16637069e7466040518163ffffffff1660e01b815260040160206040518083038186803b158015614c7757600080fd5b505afa158015614c8b573d6000803e3d6000fd5b505050506040513d6020811015614ca157600080fd5b81019080805190602001909291905050500101905080821015614cc2578091505b60018288030193506001818803019250505b8282945094505050509250929050565b6000806000614cf68a8a8a8a8a611679565b915091506000811415614d0e57600092505050614e29565b600060218190555060008090506060614d298488888e611461565b9050875181511415614e185760008090505b8851811015614e16576000898281518110614d5257fe5b60200260200101519050828281518110614d6857fe5b6020026020010151602260008f8152602001908152602001600020600083815260200190815260200160002081905550828281518110614da457fe5b6020026020010151840193506000838381518110614dbe57fe5b602002602001015114614e08576000808281526020019081526020016000208d90806001815401808255809150509060018203906000526020600020016000909192909190915055505b508080600101915050614d3b565b505b818303602881905550819450505050505b979650505050505050565b50505050505050565b60008060008060045490506000600554905081811015614e6857600094506000935060009250614f72565b600660008381526020019081526020016000206000015494506006600083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1693506006600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169250600660008381526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550506004600081548092919060010191905055505b5050909192565b6000614f83614159565b905083602460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000208190555083602360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555083602560008381526020019081526020016000206000828254019250508190555083602760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508360266000828254019250508190555050505050565b6000808214156150be576000905061523a565b6000835114156151c457602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe54477e6040518163ffffffff1660e01b815260040160006040518083038186803b15801561513057600080fd5b505afa158015615144573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561516e57600080fd5b81019080805164010000000081111561518657600080fd5b8281019050602081018481111561519c57600080fd5b81518560208202830111640100000000821117156151b957600080fd5b505092919050505092505b600080905060008090505b8451811015615221576029600087815260200190815260200160002060008683815181106151f957fe5b60200260200101518152602001908152602001600020548201915080806001019150506151cf565b50670de0b6b3a76400008382028161523557fe5b049150505b9392505050565b8280548282559060005260206000209081019282156152d0579160200282015b828111156152cf57823573ffffffffffffffffffffffffffffffffffffffff168260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190615261565b5b5090506152dd91906152ed565b5090565b604e8061533183390190565b61532d91905b8082111561532957600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055506001016152f3565b5090565b9056fe6080604052604051604e380380604e83398181016040526020811015602357600080fd5b81019080805190602001909291905050508073ffffffffffffffffffffffffffffffffffffffff16fffea265627a7a72305820a0f243b8ed274c98b355f6b770ed8002b9711101f4170fa3df2723decdab061964736f6c634300050a0032",
  "sourceMap": "113:4178:13:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;113:4178:13;;;;;;;",
  "deployedSourceMap": "113:4178:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8556:8:12;;;4266:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4266:83:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4266:83:12;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2904:503:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2904:503:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2904:503:13;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;17281:477:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17281:477:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17281:477:12;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;17281:477:12;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;17281:477:12;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;17281:477:12;;;;;;;;;;;;:::i;:::-;;2735:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2735:76:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2735:76:12;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;21103:892;;8:9:-1;5:2;;;30:1;27;20:12;5:2;21103:892:12;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;21103:892:12;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;21103:892:12;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;21103:892:12;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;21103:892:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;21103:892:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;21103:892:12;;;;;;;;;;;;;;;;;9189:265;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9189:265:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9189:265:12;;;;;;;;;;;;;;;;;:::i;:::-;;18024:131;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18024:131:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;19638:494;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19638:494:12;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;19638:494:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;19638:494:12;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;19638:494:12;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;19638:494:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;19638:494:12;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;3211:78;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3211:78:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3211:78:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;22819:119;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22819:119:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;653:69:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;653:69:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;26172:2555:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26172:2555:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;26172:2555:12;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2977:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2977:51:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2977:51:12;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;22366:125;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22366:125:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;22366:125:12;;;;;;;;;;;;;;;;;3452:48;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3452:48:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3452:48:12;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1180:153:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1180:153:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1180:153:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11102:445:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11102:445:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11102:445:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;23530:2131;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23530:2131:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;23530:2131:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;23530:2131:12;;;;;;;;;;;;;;;;;8708:119;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8708:119:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8708:119:12;;;;;;;;;;;;;;;;;:::i;:::-;;3640:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3640:28:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;29229:993;;8:9:-1;5:2;;;30:1;27;20:12;5:2;29229:993:12;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;29229:993:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4606:87;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4606:87:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4606:87:12;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;30688:886;;8:9:-1;5:2;;;30:1;27;20:12;5:2;30688:886:12;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;30688:886:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1972:565:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1972:565:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1972:565:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;23103:108:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23103:108:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;23103:108:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;23103:108:12;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;23103:108:12;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;23103:108:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;23103:108:12;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;22600:120;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22600:120:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9838:292;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9838:292:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9838:292:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2424:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2424:33:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3975:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3975:40:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3817:56;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3817:56:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3817:56:12;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10311:434;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10311:434:12;;;:::i;:::-;;5171:60;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5171:60:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5171:60:12;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5295:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5295:45:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;22100:143;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22100:143:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;22100:143:12;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;22100:143:12;;;;;;;;;;;;;;;;;2205:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2205:68:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2205:68:12;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;12193:4810;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12193:4810:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12193:4810:12;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;12193:4810:12;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;12193:4810:12;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;12193:4810:12;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;12193:4810:12;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;12193:4810:12;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;12193:4810:12;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12193:4810:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12193:4810:12;;;;;;;;;;;;;;;;;;;4266:83;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2904:503:13:-;3016:20;3048:22;3073:32;:47;3106:13;3073:47;;;;;;;;;;;:56;3121:7;3073:56;;;;;;;;;;;;3048:81;;3139:18;3160:28;:43;3189:13;3160:43;;;;;;;;;;;:52;3204:7;3160:52;;;;;;;;;;;;3139:73;;3238:162;3266:13;3293:14;3321:10;3345:21;:36;3367:13;3345:36;;;;;;;;;;;:45;3382:7;3345:45;;;;;;;;;;;;3238:14;:162::i;:::-;3223:177;;2904:503;;;;;;:::o;17281:477:12:-;255:8:37;:6;:8::i;:::-;241:22;;:10;:22;;;233:31;;;;;;7625:15:12;:13;:15::i;:::-;7617:24;;;;;;17400:9;17429:1;17425:5;;17420:145;17436:26;:33;;;;17432:1;:37;17420:145;;;17549:5;17490:25;:56;17516:26;17543:1;17516:29;;;;;;;;;;;;;;;;;;;;;;;;;17490:56;;;;;;;;;;;;;;;;:64;;;;;;;;;;;;;;;;;;17471:3;;;;;;;17420:145;;;17604:15;;17575:26;:44;;;;;;;:::i;:::-;;17639:1;17635:5;;17630:122;17646:15;;:22;;17642:1;:26;17630:122;;;17737:4;17689:25;:45;17715:15;;17731:1;17715:18;;;;;;;;;;;;;;;17689:45;;;;;;;;;;;;;;;;:52;;;;;;;;;;;;;;;;;;17670:3;;;;;;;17630:122;;;7651:1;17281:477;;:::o;2735:76::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;21103:892::-;21316:16;21344:28;21414:1;21386:24;:29;21382:166;;;21484:53;21505:13;21534:1;21520:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;21520:16:12;;;;21484:20;:53::i;:::-;21431:106;;;;;;;;21382:166;21584:1;21561:19;:24;:57;;;;21617:1;21589:24;:29;21561:57;21557:404;;;21662:1;21648:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;21648:16:12;;;;21634:30;;21557:404;;;21723:22;:29;21709:44;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;21709:44:12;;;;21695:58;;21772:9;21784:1;21772:13;;21767:184;21791:22;:29;21787:1;:33;21767:184;;;21912:24;21884:22;21907:1;21884:25;;;;;;;;;;;;;;21862:19;:47;:74;;;;;;21845:11;21857:1;21845:14;;;;;;;;;;;;;:91;;;;;21822:3;;;;;;;21767:184;;;;21557:404;21977:11;21970:18;;;21103:892;;;;;;:::o;9189:265::-;7454:25;:37;7480:10;7454:37;;;;;;;;;;;;;;;;;;;;;;;;;7446:46;;;;;;9304:1;9293:7;:12;;9285:21;;;;;;9337:31;9360:7;9337:18;;:22;;:31;;;;:::i;:::-;9316:18;:52;;;;9436:10;9383:64;;;9407:7;9416:18;;9383:64;;;;;;;;;;;;;;;;;;;;;;;;9189:265;:::o;18024:131::-;18077:6;18102:10;18095:17;;;;18024:131;:::o;19638:494::-;19891:7;19900;19926:199;19966:49;19988:13;20003:11;19966:21;:49::i;:::-;20029:16;20059:20;20093:22;19926:26;:199::i;:::-;19919:206;;;;19638:494;;;;;;;;:::o;3211:78::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;22819:119::-;22864:4;22929:1;22887:44;;:20;;;;;;;;;;;:44;;;;22880:51;;22819:119;:::o;653:69:13:-;706:16;653:69;:::o;26172:2555:12:-;26241:7;26260:28;26304:20;;;;;;;;;;;:36;;;:38;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26304:38:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26304:38:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;26304:38:12;;;;;;;;;;;;;;;;26260:83;;26353:20;26376:15;:28;;;:30;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26376:30:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26376:30:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;26376:30:12;;;;;;;;;;;;;;;;26353:53;;26437:1;26421:12;:17;26417:141;;;26546:1;26539:8;;;;;;26417:141;26572:20;;;;;;;;;;;:36;;;26609:7;26572:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26572:45:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26572:45:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;26572:45:12;;;;;;;;;;;;;;;;26568:435;;;26749:243;26781:12;26811:32;:46;26844:12;26811:46;;;;;;;;;;;:55;26858:7;26811:55;;;;;;;;;;;;26884:28;:42;26913:12;26884:42;;;;;;;;;;;:51;26927:7;26884:51;;;;;;;;;;;;31827:7;26749:14;:243::i;:::-;26742:250;;;;;;26568:435;27066:1;27017:20;;;;;;;;;;;:43;;;:45;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;27017:45:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;27017:45:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;27017:45:12;;;;;;;;;;;;;;;;:50;27013:1324;;;27254:24;27292:9;27326:20;;;;;;;;;;;:44;;;:46;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;27326:46:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;27326:46:12;;;;;;39:16:-1;36:1;17:17;2:54;27326:46:12;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;27326:46:12;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;27326:46:12;;;;;;27316:56;;27395:1;27391:5;;27386:427;27402:7;:14;27398:1;:18;27386:427;;;27456:7;27464:1;27456:10;;;;;;;;;;;;;;27445:7;:21;27441:358;;;27497:283;27537:12;27575:32;:46;27608:12;27575:46;;;;;;;;;;;:55;27622:7;27575:55;;;;;;;;;;;;27656:28;:42;27685:12;27656:42;;;;;;;;;;;:51;27699:7;27656:51;;;;;;;;;;;;31827:7;27497:14;:283::i;:::-;27490:290;;;;;;;;27441:358;27418:3;;;;;;;27386:427;;;27837:20;;;;;;;;;;;:47;;;:49;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;27837:49:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;27837:49:12;;;;;;39:16:-1;36:1;17:17;2:54;27837:49:12;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;27837:49:12;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;27837:49:12;;;;;;27827:59;;27909:1;27905:5;;27900:427;27916:7;:14;27912:1;:18;27900:427;;;27970:7;27978:1;27970:10;;;;;;;;;;;;;;27959:7;:21;27955:358;;;28011:283;28051:12;28089:32;:46;28122:12;28089:46;;;;;;;;;;;:55;28136:7;28089:55;;;;;;;;;;;;28170:28;:42;28199:12;28170:42;;;;;;;;;;;:51;28213:7;28170:51;;;;;;;;;;;;31827:7;28011:14;:283::i;:::-;28004:290;;;;;;;;27955:358;27932:3;;;;;;;27900:427;;;27013:1324;;;28514:206;28542:12;28568:15;:27;;;28596:7;28613:1;28568:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;28568:48:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;28568:48:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;28568:48:12;;;;;;;;;;;;;;;;28630:15;:32;;;28663:7;28630:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;28630:41:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;28630:41:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;28630:41:12;;;;;;;;;;;;;;;;31827:7;28514:14;:206::i;:::-;28507:213;;;;26172:2555;;;;:::o;2977:51::-;;;;;;;;;;;;;;;;;:::o;22366:125::-;22423:16;22458:26;22451:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22366:125;:::o;3452:48::-;;;;;;;;;;;;;;;;;:::o;1180:153:13:-;8049:20:12;;;;;;;;;;;:36;;;:38;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8049:38:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8049:38:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8049:38:12;;;;;;;;;;;;;;;;8027:61;;:10;:61;;;8019:70;;;;;;1286:40:13;1308:12;1322:3;1286:21;:40::i;:::-;1180:153;;:::o;11102:445:12:-;11226:1;11198:24;:22;:24::i;:::-;:29;:55;;;;11245:8;:6;:8::i;:::-;11231:22;;:10;:22;;;11198:55;11190:64;;;;;;11273:15;:13;:15::i;:::-;11272:16;11264:25;;;;;;11332:1;11307:27;;:13;:27;;;;11299:36;;;;;;11386:13;11345:20;;:55;;;;;;;;;;;;;;;;;;31758:2;11410:25;:28;11436:1;11410:28;;;;;;;;;;;:59;;;;11523:16;11479:24;;:61;;;;;;;;;;;;;;;;;;11102:445;;:::o;23530:2131::-;23651:34;23697:14;23714:20;;;;;;;;;;;:39;;;23754:19;23714:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23714:60:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23714:60:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;23714:60:12;;;;;;;;;;;;;;;;23697:77;;23824:1;23793:33;;:19;:33;;;;23785:42;;;;;;23864:1;23845:21;;:7;:21;;;;23837:30;;;;;;23895:1;23885:6;:11;;23877:20;;;;;;23908:28;23952:20;;;;;;;;;;;:36;;;:38;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23952:38:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23952:38:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;23952:38:12;;;;;;;;;;;;;;;;23908:83;;24001:23;24039:19;24028:30;;:7;:30;;;;24027:55;;24080:1;24027:55;;;24062:7;24027:55;24001:81;;24092:18;24120:17;24179:1;24152:29;;:15;:29;;;24148:328;;24236:15;:31;;;24268:6;24276:15;24236:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24236:56:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;24236:56:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;24236:56:12;;;;;;;;;;;;;;;;24223:69;;24324:1;24310:10;:15;24306:79;;;24367:1;24353:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;24353:16:12;;;;24345:25;;;;;;;;;24306:79;24410:15;:30;;;24441:6;24449:15;24410:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24410:55:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;24410:55:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;24410:55:12;;;;;;;;;;;;;;;;24398:67;;24148:328;24486:24;24513:23;:31;24537:6;24513:31;;;;;;;;;;;24486:58;;24554:14;24571:6;:13;;;;24554:30;;24595:20;24632:6;24618:21;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;24618:21:12;;;;24595:44;;24649:17;24669:1;24649:21;;24680:9;24709:1;24705:5;;24700:805;24716:6;24712:1;:10;24700:805;;;24743:13;24759:6;24766:1;24759:9;;;;;;;;;;;;;;;;24743:25;;24813:1;24786:29;;:15;:29;;;24782:574;;24873:10;24865:5;:18;24861:206;;;25040:8;;;24861:206;25101:5;25088:9;:18;;:36;;;;;25123:1;25110:9;:14;;25088:36;25084:258;;;25318:5;;;25084:258;24782:574;25374:15;:30;;;25405:6;25413:15;25430:5;25374:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25374:62:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25374:62:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;25374:62:12;;;;;;;;;;;;;;;;25369:126;;25475:5;25456:3;25460:11;;;;;;25456:16;;;;;;;;;;;;;:24;;;;;25369:126;24700:805;;24724:3;;;;;;;24700:805;;;25549:9;25535:24;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;25535:24:12;;;;25515:44;;25578:1;25574:5;;25569:86;25585:9;25581:1;:13;25569:86;;;25638:3;25642:1;25638:6;;;;;;;;;;;;;;25615:17;25633:1;25615:20;;;;;;;;;;;;;:29;;;;;25596:3;;;;;;;25569:86;;;23530:2131;;;;;;;;;;;;;;;:::o;8708:119::-;8781:39;8812:7;8781:30;:39::i;:::-;8708:119;:::o;3640:28::-;;;;:::o;29229:993::-;29437:7;29480:1;29460:16;:21;:46;;;;29505:1;29485:16;:21;29460:46;:67;;;;29526:1;29510:12;:17;29460:67;29456:106;;;29550:1;29543:8;;;;29456:106;29571:13;29587:1;29571:17;;29598:24;29641:16;29625:12;:32;;:70;;29694:1;29625:70;;;29675:16;29660:12;:31;29625:70;29598:97;;29705:27;29735:25;:40;29761:13;29735:40;;;;;;;;;;;;29705:70;;29857:19;29838:16;:38;29815:19;29809:3;:25;29789:16;:46;:87;29785:409;;;29994:12;29975:16;29961:11;:30;:45;;;;;;29953:53;;29785:409;;;30179:3;30160:16;:22;30136:19;30130:3;:25;30110:16;30096:11;:30;:60;:87;;;;;;30088:95;;29785:409;30210:5;30203:12;;;;;29229:993;;;;;;;;:::o;4606:87::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;30688:886::-;30862:7;30905:1;30885:16;:21;:42;;;;30926:1;30910:12;:17;30885:42;30881:81;;;30950:1;30943:8;;;;30881:81;30971:13;30987:1;30971:17;;30998:24;31041:16;31025:12;:32;;:70;;31094:1;31025:70;;;31075:16;31060:12;:31;31025:70;30998:97;;31105:27;31135:25;:40;31161:13;31135:40;;;;;;;;;;;;31105:70;;31257:19;31238:16;:38;31215:19;31209:3;:25;31189:16;:46;:87;31185:361;;;31394:12;31375:16;31361:11;:30;:45;;;;;;31353:53;;31185:361;;;31532:3;31510:19;31496:11;:33;:39;;;;;;31488:47;;31185:361;31562:5;31555:12;;;;;30688:886;;;;;;;:::o;1972:565:13:-;2117:20;2149:22;2174:32;:47;2207:13;2174:47;;;;;;;;;;;:56;2222:7;2174:56;;;;;;;;;;;;2149:81;;2240:18;2261:28;:43;2290:13;2261:43;;;;;;;;;;;:52;2305:7;2261:52;;;;;;;;;;;;2240:73;;2339:191;2367:13;2394:15;2423:14;2451:10;2475:21;:36;2497:13;2475:36;;;;;;;;;;;:45;2512:7;2475:45;;;;;;;;;;;;2339:14;:191::i;:::-;2324:206;;1972:565;;;;;;;:::o;23103:108:12:-;23180:4;23196:8;;;22600:120;22655:7;22700:13;;22696:1;22681:12;;:16;:32;22674:39;;22600:120;:::o;9838:292::-;7454:25;:37;7480:10;7454:37;;;;;;;;;;;;;;;;;;;;;;;;;7446:46;;;;;;9960:1;9949:7;:12;;9941:21;;;;;;9980:19;;;;;;;;;;;9972:28;;;;;;10010:53;10032:7;10041:9;10052:10;10010:21;:53::i;:::-;10112:10;10078:45;;10101:9;10078:45;;;10092:7;10078:45;;;;;;;;;;;;;;;;;;9838:292;;:::o;2424:33::-;;;;:::o;3975:40::-;;;;:::o;3817:56::-;;;;;;;;;;;;;;;;;:::o;10311:434::-;8263:20;;;;;;;;;;;8241:43;;:10;:43;;;8233:52;;;;;;10385:28;10429:20;;;;;;;;;;;:36;;;:38;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10429:38:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10429:38:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10429:38:12;;;;;;;;;;;;;;;;10385:83;;10478:20;10501:15;:28;;;:30;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10501:30:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10501:30:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10501:30:12;;;;;;;;;;;;;;;;10478:53;;10541:27;10571:20;;;;;;;;;;;:37;;;:39;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10571:39:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10571:39:12;;;;;;39:16:-1;36:1;17:17;2:54;10571:39:12;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10571:39:12;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;10571:39:12;;;;;;10541:69;;10625:9;10637:1;10625:13;;10620:119;10644:10;:17;10640:1;:21;10620:119;;;10727:1;10682:13;:27;10696:12;10682:27;;;;;;;;;;;:42;10710:10;10721:1;10710:13;;;;;;;;;;;;;;10682:42;;;;;;;;;;;:46;;;;10663:3;;;;;;;10620:119;;;;8295:1;;;10311:434::o;5171:60::-;;;;;;;;;;;;;;;;;:::o;5295:45::-;;;;;;;;;;;;;:::o;22100:143::-;22169:16;22204:23;:32;22228:7;22204:32;;;;;;;;;;;22197:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22100:143;;;:::o;2205:68::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12193:4810::-;12317:32;12351:30;7842:42;7828:56;;:10;:56;;;7820:65;;;;;;12423:4;;:11;;12401;;:18;;:33;;:60;;;;12460:1;12438:11;;:18;;:23;;12401:60;:76;;;;12476:1;12465:4;;12470:1;12465:7;;;;;;;;;;;;;;;:12;;;;12401:76;12397:150;;;12515:1;12501:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;12501:16:12;;;;12533:1;12519:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;12519:16:12;;;;12493:43;;;;;;;;;;;;12397:150;12648:1;12606:44;;:20;;;;;;;;;;;:44;;;:97;;;;12655:20;;;;;;;;;;;:32;;;12688:11;;12700:1;12688:14;;;;;;;;;;;;;;;12655:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12655:48:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12655:48:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12655:48:12;;;;;;;;;;;;;;;;12654:49;12606:97;12602:171;;;12741:1;12727:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;12727:16:12;;;;12759:1;12745:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;12745:16:12;;;;12719:43;;;;;;;;;;;;12602:171;12967:20;;;;;;;;;;;:35;;;:37;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12967:37:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12967:37:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12967:37:12;;;;;;;;;;;;;;;;12955:71;;;:73;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12955:73:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12955:73:12;;;;13092:19;;;;;;;;;;;13087:299;;13143:1;13127:13;:17;;;;13173:1;13158:12;:16;;;;13210:4;13188:19;;:26;;;;;;;;;;;;;;;;;;13348:27;:25;:27::i;:::-;13087:299;13396:24;13423:3;13396:30;;13436:28;13480:20;;;;;;;;;;;:36;;;:38;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13480:38:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13480:38:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13480:38:12;;;;;;;;;;;;;;;;13436:83;;13529:20;13552:15;:28;;;:30;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13552:30:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13552:30:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13552:30:12;;;;;;;;;;;;;;;;13529:53;;13592:28;13623:15;:36;;;:38;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13623:38:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13623:38:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13623:38:12;;;;;;;;;;;;;;;;13592:69;;13671:31;13705:1;13671:35;;13770:1;13721:20;;;;;;;;;;;:43;;;:45;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13721:45:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13721:45:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13721:45:12;;;;;;;;;;;;;;;;:50;13717:546;;13807:1;13791:12;:17;;:76;;;;;13813:20;;;;;;;;;;;:38;;;13852:11;;13864:1;13852:14;;;;;;;;;;;;;;;13813:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13813:54:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13813:54:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13813:54:12;;;;;;;;;;;;;;;;13812:55;13791:76;13787:466;;;14112:14;14129:20;;;;;;;;;;;:38;;;14168:11;;14180:1;14168:14;;;;;;;;;;;;;;;14129:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14129:54:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14129:54:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14129:54:12;;;;;;;;;;;;;;;;14112:71;;14201:13;:27;14215:12;14201:27;;;;;;;;;;;:35;14229:6;14201:35;;;;;;;;;;;;:37;;;;;;;;;;;;;13787:466;;13717:546;14305:20;14277:24;:22;:24::i;:::-;:48;14273:2608;;;14417:1;14401:12;:17;14397:231;;14464:149;14504:15;14541:12;14575:20;14464:18;:149::i;:::-;14438:175;;14397:231;14679:20;;;;;;;;;;;:36;;;:38;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14679:38:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14679:38:12;;;;14792:9;14815:24;14857:1;14842:12;:16;14815:43;;14872:30;15184:20;;;;;;;;;;;:44;;;:46;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15184:46:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15184:46:12;;;;;;39:16:-1;36:1;17:17;2:54;15184:46:12;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15184:46:12;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;15184:46:12;;;;;;15168:62;;15253:1;15249:5;;15244:154;15260:13;:20;15256:1;:24;15244:154;;;15305:78;15331:15;15348:16;15366:13;15380:1;15366:16;;;;;;;;;;;;;;15305:25;:78::i;:::-;15282:3;;;;;;;15244:154;;;15728:20;;;;;;;;;;;:37;;;:39;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15728:39:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15728:39:12;;;;;;39:16:-1;36:1;17:17;2:54;15728:39:12;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15728:39:12;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;15728:39:12;;;;;;15712:55;;15790:1;15786:5;;15781:154;15797:13;:20;15793:1;:24;15781:154;;;15842:78;15868:15;15885:16;15903:13;15917:1;15903:16;;;;;;;;;;;;;;15842:25;:78::i;:::-;15819:3;;;;;;;15781:154;;;16401:20;;;;;;;;;;;:47;;;:49;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16401:49:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16401:49:12;;;;;;39:16:-1;36:1;17:17;2:54;16401:49:12;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16401:49:12;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;16401:49:12;;;;;;16385:65;;16473:1;16469:5;;16464:154;16480:13;:20;16476:1;:24;16464:154;;;16525:78;16551:15;16568:16;16586:13;16600:1;16586:16;;;;;;;;;;;;;;16525:25;:78::i;:::-;16502:3;;;;;;;16464:154;;;31758:2;16718:25;:43;16744:16;16718:43;;;;;;;;;;;:74;;;;16869:1;16850:20;;14273:2608;;;;16937:59;16954:23;16979:16;16937;:59::i;:::-;16930:66;;;;;;;;;7895:1;12193:4810;;;;;;;:::o;370:156:35:-;411:11;434:12;250:66;449:10;;434:25;;505:4;499:11;492:18;;478:42;;:::o;39412:991:12:-;39539:16;39557:7;39602:1;39580:11;:18;:23;39576:107;;;39633:20;;;;;;;;;;;:37;;;:39;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;39633:39:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;39633:39:12;;;;;;39:16:-1;36:1;17:17;2:54;39633:39:12;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;39633:39:12;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;39633:39:12;;;;;;39619:53;;39576:107;39692:38;39747:11;:18;39733:33;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;39733:33:12;;;;39692:74;;39776:31;39810:1;39776:35;;39826:9;39838:1;39826:13;;39821:511;39845:11;:18;39841:1;:22;39821:511;;;39884:14;39901:11;39913:1;39901:14;;;;;;;;;;;;;;39884:31;;40009:1;39950:32;:47;39983:13;39950:47;;;;;;;;;;;:55;39998:6;39950:55;;;;;;;;;;;;:60;;:129;;;;;40031:20;;;;;;;;;;;:40;;;40072:6;40031:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;40031:48:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;40031:48:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;40031:48:12;;;;;;;;;;;;;;;;40030:49;39950:129;39929:328;;;40139:13;:28;40153:13;40139:28;;;;;;;;;;;:36;40168:6;40139:36;;;;;;;;;;;;40112:21;40134:1;40112:24;;;;;;;;;;;;;:63;;;;;39929:328;;;40241:1;40214:21;40236:1;40214:24;;;;;;;;;;;;;:28;;;;;39929:328;40297:21;40319:1;40297:24;;;;;;;;;;;;;;40270:51;;;;39821:511;39865:3;;;;;;;39821:511;;;;40349:21;40372:23;40341:55;;;;;;39412:991;;;;;:::o;773:143:30:-;830:7;849:9;865:1;861;:5;849:17;;889:1;884;:6;;876:15;;;;;;908:1;901:8;;;773:143;;;;:::o;36512:313:12:-;36640:19;36770:48;36791:13;36806:11;36770:20;:48::i;:::-;36730:25;;36697:18;;:58;:121;36671:147;;36512:313;;;;:::o;33035:645::-;33246:7;33255;33304:1;33278:22;:27;33274:202;;;33386:79;33407:16;33425;:37;;;:39;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;33425:39:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;33425:39:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;33425:39:12;;;;;;;;;;;;;;;;33386:20;:79::i;:::-;33321:144;;;;;;;;33274:202;33486:26;33553:1;33527:22;:27;;:94;;33620:1;33527:94;;;33595:22;33572:20;33557:12;:35;:60;;;;;;33527:94;33486:135;;33640:18;33660:12;33632:41;;;;;33035:645;;;;;;;:::o;50047:432::-;50150:1;50139:7;:12;;:34;;;;;50156:3;:8;;:17;50165:7;50156:17;;;;;;;;;;;;;;;;;;;;;;;50155:18;50139:34;50135:338;;;50449:7;50458:3;50427:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;50427:35:12;;;;50135:338;50047:432;;:::o;42996:101::-;43052:7;43078:12;43071:19;;42996:101;:::o;47662:333::-;47765:17;47800:1;47785:12;;:16;47765:36;;47833:121;;;;;;;;47874:7;47833:121;;;;47903:7;47833:121;;;;;;47934:9;47833:121;;;;;47811:8;:19;47820:9;47811:19;;;;;;;;;;;:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47979:9;47964:12;:24;;;;47662:333;;;;:::o;42389:524::-;42494:1;42449:47;;:24;;;;;;;;;;;:47;;;42445:84;;;42512:7;;42445:84;42543:9;42555:1;42543:13;;42538:235;42562:26;:33;;;;42558:1;:37;42538:235;;;42616:14;42633:26;42660:1;42633:29;;;;;;;;;;;;;;;;;;;;;;;;;42616:46;;42708:24;;;;;;;;;;;:46;;;42755:6;42708:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;42708:54:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;42708:54:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;42708:54:12;;;;;;;;;;;;;;;;42676:21;:29;42698:6;42676:29;;;;;;;;;;;;;;;:86;;;;42538:235;42597:3;;;;;;;42538:235;;;;42823:1;42786:26;:33;;;;:38;42782:125;;42856:24;;;;;;;;;;;:38;;;:40;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;42856:40:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;42856:40:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;42856:40:12;;;;;;;;;;;;;;;;42840:13;:56;;;;42782:125;42389:524;:::o;40924:1257::-;41084:31;41127:27;41157:20;;;;;;;;;;;:37;;;:39;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;41157:39:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;41157:39:12;;;;;;39:16:-1;36:1;17:17;2:54;41157:39:12;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;41157:39:12;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;41157:39:12;;;;;;41127:69;;41236:27;41265:29;41310:61;41331:16;41349:21;41310:20;:61::i;:::-;41235:136;;;;41382:38;41422:31;41469:47;41490:13;41505:10;41469:20;:47::i;:::-;41381:135;;;;41600:255;41638:16;41668:13;41695:19;41728:21;41763:10;41787:21;41822:23;41600:24;:255::i;:::-;41574:281;;41911:263;41956:16;41987:13;42014:19;42047:21;42082:10;42106:21;42141:23;41911;:263::i;:::-;40924:1257;;;;;;;;;;:::o;49117:597::-;49332:1;49276:28;:43;49305:13;49276:43;;;;;;;;;;;:52;49320:7;49276:52;;;;;;;;;;;;:57;49272:94;;49349:7;;49272:94;49375:19;49397:16;:33;;;49431:7;49397:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;49397:42:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;49397:42:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;49397:42:12;;;;;;;;;;;;;;;;49375:64;;49468:1;49453:11;:16;49449:53;;;49485:7;;;49449:53;49566:11;49511:28;:43;49540:13;49511:43;;;;;;;;;;;:52;49555:7;49511:52;;;;;;;;;;;:66;;;;49658:16;:28;;;49687:7;49704:1;49658:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;49658:49:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;49658:49:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;49658:49:12;;;;;;;;;;;;;;;;49587:32;:47;49620:13;49587:47;;;;;;;;;;;:56;49635:7;49587:56;;;;;;;;;;;:120;;;;49117:597;;;;;:::o;45041:1066::-;45177:26;45205:24;45245:19;45267:25;:23;:25::i;:::-;45245:47;;45321:11;45307;:25;45303:81;;;45362:11;45348:25;;45303:81;45394:24;45449:1;45421:24;:29;;45394:56;;45502:19;:27;;45528:1;45502:27;;;45524:1;45502:27;45487:43;;:11;:43;45473:58;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;45473:58:12;;;;45461:70;;45565:9;:16;45551:31;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;45551:31:12;;;;45541:41;;45598:9;45610:1;45598:13;;45593:263;45617:11;45613:1;:15;45593:263;;;45650:14;45666:16;45684:14;45702:23;:21;:23::i;:::-;45649:76;;;;;;45754:8;45739:9;45749:1;45739:12;;;;;;;;;;;;;:23;;;;;;;;;;;45789:6;45776:7;45784:1;45776:10;;;;;;;;;;;;;:19;;;;;45809:36;45820:6;45828:8;45838:6;45809:10;:36::i;:::-;45593:263;;;45630:3;;;;;;;45593:263;;;;45870:19;45866:149;;;45938:4;45905:9;45915:11;45905:22;;;;;;;;;;;;;:38;;;;;;;;;;;45980:24;45957:7;45965:11;45957:20;;;;;;;;;;;;;:47;;;;;45866:149;46030:32;46043:9;46054:7;46030:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;46030:32:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;46030:32:12;;;;;;;;;;;;;;;;;;;46081:9;46092:7;46073:27;;;;;;45041:1066;;;;;:::o;3906:232:13:-;4033:7;4059:72;4076:13;4091:11;706:16;4059;:72::i;:::-;4052:79;;3906:232;;;;:::o;37674:880:12:-;37810:7;37819;37838:27;37868:1;37838:31;;37879:29;37911:1;37879:33;;37922:25;37950:20;;;;;;;;;;;:43;;;:45;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37950:45:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;37950:45:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;37950:45:12;;;;;;;;;;;;;;;;37922:73;;38030:1;38009:17;:22;38005:482;;38047:26;38180:1;38176;38174;38136:20;;;;;;;;;;;:35;;;:37;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;38136:37:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;38136:37:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;38136:37:12;;;;;;;;;;;;;;;;:39;:41;;;;;;38092:16;:39;;;:41;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;38092:41:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;38092:41:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;38092:41:12;;;;;;;;;;;;;;;;:85;:89;38047:134;;38220:18;38200:17;:38;38196:115;;;38278:18;38258:38;;38196:115;38391:1;38371:17;38347:21;:41;:45;38325:67;;38475:1;38454:18;38430:21;:42;:46;38406:70;;38005:482;;38504:19;38525:21;38496:51;;;;;;;37674:880;;;;;:::o;34481:1504::-;34815:7;34835:26;34863:19;34886:193;34931:16;34961:13;34988:20;35022:22;35058:11;34886:31;:193::i;:::-;34834:245;;;;35109:1;35094:11;:16;35090:55;;;35133:1;35126:8;;;;;;35090:55;35176:1;35155:18;:22;;;;35188:25;35216:1;35188:29;;35228:27;35258:161;35290:18;35322:22;35358:24;35396:13;35258:18;:161::i;:::-;35228:191;;35454:11;:18;35433:10;:17;:39;35429:445;;;35493:9;35505:1;35493:13;;35488:376;35512:11;:18;35508:1;:22;35488:376;;;35555:14;35572:11;35584:1;35572:14;;;;;;;;;;;;;;35555:31;;35651:10;35662:1;35651:13;;;;;;;;;;;;;;35604:21;:36;35626:13;35604:36;;;;;;;;;;;:44;35641:6;35604:44;;;;;;;;;;;:60;;;;35703:10;35714:1;35703:13;;;;;;;;;;;;;;35682:34;;;;35755:1;35738:10;35749:1;35738:13;;;;;;;;;;;;;;:18;35734:116;;35780:23;:31;35804:6;35780:31;;;;;;;;;;;35817:13;35780:51;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;35780:51:12;;;;;;;;;;;;;;;;;;;;;;35734:116;35488:376;35532:3;;;;;;;35488:376;;;;35429:445;35926:17;35912:11;:31;35884:25;:59;;;;35961:17;35954:24;;;;;;34481:1504;;;;;;;;;;:::o;4144:144:13:-;;;;;;;;:::o;46583:575:12:-;46633:14;46649:16;46667:14;46693:18;46714:13;;46693:34;;46737:17;46757:12;;46737:32;;46796:10;46784:9;:22;46780:372;;;46831:1;46822:10;;46865:1;46846:21;;46898:1;46881:19;;46780:372;;;46940:8;:20;46949:10;46940:20;;;;;;;;;;;:27;;;46931:36;;46992:8;:20;47001:10;46992:20;;;;;;;;;;;:29;;;;;;;;;;;;46981:40;;47044:8;:20;47053:10;47044:20;;;;;;;;;;;:27;;;;;;;;;;;;47035:36;;47092:8;:20;47101:10;47092:20;;;;;;;;;;;;47085:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47126:13;;:15;;;;;;;;;;;;;46780:372;46583:575;;;;;:::o;48387:389::-;48478:19;48500:24;:22;:24::i;:::-;48478:46;;48583:7;48534:23;:33;48558:8;48534:33;;;;;;;;;;;;;;;:46;48568:11;48534:46;;;;;;;;;;;:56;;;;48630:7;48600:16;:26;48617:8;48600:26;;;;;;;;;;;;;;;;:37;;;;;;;;;;;48677:7;48647:13;:26;48661:11;48647:26;;;;;;;;;;;;:37;;;;;;;;;;;48728:7;48694:21;:30;48716:7;48694:30;;;;;;;;;;;;;;;;:41;;;;;;;;;;;48762:7;48745:13;;:24;;;;;;;;;;;48387:389;;;;:::o;43609:614::-;43764:7;43805:1;43787:14;:19;43783:33;;;43815:1;43808:8;;;;43783:33;43852:1;43830:11;:18;:23;43826:107;;;43883:20;;;;;;;;;;;:37;;;:39;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;43883:39:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;43883:39:12;;;;;;39:16:-1;36:1;17:17;2:54;43883:39:12;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;43883:39:12;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;43883:39:12;;;;;;43869:53;;43826:107;43942:32;43977:1;43942:36;;43993:9;44005:1;43993:13;;43988:161;44012:11;:18;44008:1;:22;43988:161;;;44079:28;:43;44108:13;44079:43;;;;;;;;;;;:59;44123:11;44135:1;44123:14;;;;;;;;;;;;;;44079:59;;;;;;;;;;;;44051:87;;;;44032:3;;;;;;;43988:161;;;;44209:7;44192:14;44165:24;:41;:51;;;;;;44158:58;;;43609:614;;;;;;:::o;113:4178:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity 0.5.10;\n\nimport \"./BlockRewardAuRaBase.sol\";\nimport \"../interfaces/IBlockRewardAuRaCoins.sol\";\n\n\ncontract BlockRewardAuRaCoins is BlockRewardAuRaBase, IBlockRewardAuRaCoins {\n\n    // ============================================== Constants =======================================================\n\n    /// @dev Inflation rate per staking epoch. Calculated as follows:\n    /// 18% annual rate * 48 staking weeks per staking year / 100 * 10**18\n    /// This assumes that 1 staking epoch = 1 week\n    /// i.e. Inflation Rate = 18/48/100 * 1 ether\n    /// Recalculate it for different annual rate and/or different staking epoch duration.\n    uint256 public constant NATIVE_COIN_INFLATION_RATE = 3750000000000000;\n\n    // =============================================== Setters ========================================================\n\n    /// @dev Called by the `StakingAuRa.claimReward` function to transfer native coins\n    /// from the balance of the `BlockRewardAuRa` contract to the specified address as a reward.\n    /// @param _nativeCoins The amount of native coins to transfer as a reward.\n    /// @param _to The target address to transfer the amounts to.\n    function transferReward(uint256 _nativeCoins, address payable _to) external onlyStakingContract {\n        _transferNativeReward(_nativeCoins, _to);\n    }\n\n    // =============================================== Getters ========================================================\n\n    /// @dev Returns the reward amount in native coins for\n    /// some delegator with the specified stake amount placed into the specified\n    /// pool before the specified staking epoch. Used by the `StakingAuRa.claimReward` function.\n    /// @param _delegatorStake The stake amount placed by some delegator into the `_poolId` pool.\n    /// @param _stakingEpoch The serial number of staking epoch.\n    /// @param _poolId The pool id.\n    /// @return `uint256 nativeReward` - the reward amount in native coins.\n    function getDelegatorReward(\n        uint256 _delegatorStake,\n        uint256 _stakingEpoch,\n        uint256 _poolId\n    ) external view returns(uint256 nativeReward) {\n        uint256 validatorStake = snapshotPoolValidatorStakeAmount[_stakingEpoch][_poolId];\n        uint256 totalStake = snapshotPoolTotalStakeAmount[_stakingEpoch][_poolId];\n\n        nativeReward = delegatorShare(\n            _stakingEpoch,\n            _delegatorStake,\n            validatorStake,\n            totalStake,\n            epochPoolNativeReward[_stakingEpoch][_poolId]\n        );\n    }\n\n    /// @dev Returns the reward amount in native coins for\n    /// the specified validator and for the specified staking epoch.\n    /// Used by the `StakingAuRa.claimReward` function.\n    /// @param _stakingEpoch The serial number of staking epoch.\n    /// @param _poolId The pool id.\n    /// @return `uint256 nativeReward` - the reward amount in native coins.\n    function getValidatorReward(\n        uint256 _stakingEpoch,\n        uint256 _poolId\n    ) external view returns(uint256 nativeReward) {\n        uint256 validatorStake = snapshotPoolValidatorStakeAmount[_stakingEpoch][_poolId];\n        uint256 totalStake = snapshotPoolTotalStakeAmount[_stakingEpoch][_poolId];\n\n        nativeReward = validatorShare(\n            _stakingEpoch,\n            validatorStake,\n            totalStake,\n            epochPoolNativeReward[_stakingEpoch][_poolId]\n        );\n    }\n\n    // ============================================== Internal ========================================================\n\n    /// @dev Calculates and returns inflation amount based on the specified\n    /// staking epoch and validator set. Uses NATIVE_COIN_INFLATION_RATE constant.\n    /// Used by `_distributeNativeRewards` internal function.\n    /// @param _stakingEpoch The number of the current staking epoch.\n    /// @param _validators The array of the current validators (their pool ids).\n    function _coinInflationAmount(\n        uint256 _stakingEpoch,\n        uint256[] memory _validators\n    ) internal view returns(uint256) {\n        return _inflationAmount(_stakingEpoch, _validators, NATIVE_COIN_INFLATION_RATE);\n    }\n\n    function _distributeTokenRewards(\n        address, uint256, uint256, uint256, uint256[] memory, uint256[] memory, uint256\n    ) internal {\n    }\n\n}\n",
  "sourcePath": "/Users/akshaypatil/Documents/etherlite/pos-contracts/posdao-etherlite/contracts/base/BlockRewardAuRaCoins.sol",
  "ast": {
    "absolutePath": "/Users/akshaypatil/Documents/etherlite/pos-contracts/posdao-etherlite/contracts/base/BlockRewardAuRaCoins.sol",
    "exportedSymbols": {
      "BlockRewardAuRaCoins": [
        12120
      ]
    },
    "id": 12121,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11977,
        "literals": [
          "solidity",
          "0.5",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:13"
      },
      {
        "absolutePath": "/Users/akshaypatil/Documents/etherlite/pos-contracts/posdao-etherlite/contracts/base/BlockRewardAuRaBase.sol",
        "file": "./BlockRewardAuRaBase.sol",
        "id": 11978,
        "nodeType": "ImportDirective",
        "scope": 12121,
        "sourceUnit": 11976,
        "src": "25:35:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/akshaypatil/Documents/etherlite/pos-contracts/posdao-etherlite/contracts/interfaces/IBlockRewardAuRaCoins.sol",
        "file": "../interfaces/IBlockRewardAuRaCoins.sol",
        "id": 11979,
        "nodeType": "ImportDirective",
        "scope": 12121,
        "sourceUnit": 16140,
        "src": "61:49:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11980,
              "name": "BlockRewardAuRaBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11975,
              "src": "146:19:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BlockRewardAuRaBase_$11975",
                "typeString": "contract BlockRewardAuRaBase"
              }
            },
            "id": 11981,
            "nodeType": "InheritanceSpecifier",
            "src": "146:19:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11982,
              "name": "IBlockRewardAuRaCoins",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16139,
              "src": "167:21:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IBlockRewardAuRaCoins_$16139",
                "typeString": "contract IBlockRewardAuRaCoins"
              }
            },
            "id": 11983,
            "nodeType": "InheritanceSpecifier",
            "src": "167:21:13"
          }
        ],
        "contractDependencies": [
          11975,
          16109,
          16139,
          18959,
          19026
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 12120,
        "linearizedBaseContracts": [
          12120,
          16139,
          11975,
          16109,
          19026,
          18959
        ],
        "name": "BlockRewardAuRaCoins",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 11986,
            "name": "NATIVE_COIN_INFLATION_RATE",
            "nodeType": "VariableDeclaration",
            "scope": 12120,
            "src": "653:69:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11984,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "653:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "33373530303030303030303030303030",
              "id": 11985,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "706:16:13",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3750000000000000_by_1",
                "typeString": "int_const 3750000000000000"
              },
              "value": "3750000000000000"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 12000,
              "nodeType": "Block",
              "src": "1276:57:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11996,
                        "name": "_nativeCoins",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11988,
                        "src": "1308:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11997,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11990,
                        "src": "1322:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 11995,
                      "name": "_transferNativeReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11974,
                      "src": "1286:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_payable_$returns$__$",
                        "typeString": "function (uint256,address payable)"
                      }
                    },
                    "id": 11998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1286:40:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11999,
                  "nodeType": "ExpressionStatement",
                  "src": "1286:40:13"
                }
              ]
            },
            "documentation": "@dev Called by the `StakingAuRa.claimReward` function to transfer native coins\n from the balance of the `BlockRewardAuRa` contract to the specified address as a reward.\n @param _nativeCoins The amount of native coins to transfer as a reward.\n @param _to The target address to transfer the amounts to.",
            "id": 12001,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 11993,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11992,
                  "name": "onlyStakingContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9734,
                  "src": "1256:19:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1256:19:13"
              }
            ],
            "name": "transferReward",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11988,
                  "name": "_nativeCoins",
                  "nodeType": "VariableDeclaration",
                  "scope": 12001,
                  "src": "1204:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11987,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1204:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11990,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 12001,
                  "src": "1226:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 11989,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1226:15:13",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1203:43:13"
            },
            "returnParameters": {
              "id": 11994,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1276:0:13"
            },
            "scope": 12120,
            "src": "1180:153:13",
            "stateMutability": "nonpayable",
            "superFunction": 16118,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12042,
              "nodeType": "Block",
              "src": "2139:398:13",
              "statements": [
                {
                  "assignments": [
                    12013
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12013,
                      "name": "validatorStake",
                      "nodeType": "VariableDeclaration",
                      "scope": 12042,
                      "src": "2149:22:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12012,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2149:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12019,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 12014,
                        "name": "snapshotPoolValidatorStakeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9654,
                        "src": "2174:32:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                        }
                      },
                      "id": 12016,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 12015,
                        "name": "_stakingEpoch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12005,
                        "src": "2207:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2174:47:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 12018,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 12017,
                      "name": "_poolId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12007,
                      "src": "2222:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2174:56:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2149:81:13"
                },
                {
                  "assignments": [
                    12021
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12021,
                      "name": "totalStake",
                      "nodeType": "VariableDeclaration",
                      "scope": 12042,
                      "src": "2240:18:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12020,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2240:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12027,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 12022,
                        "name": "snapshotPoolTotalStakeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9648,
                        "src": "2261:28:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                        }
                      },
                      "id": 12024,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 12023,
                        "name": "_stakingEpoch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12005,
                        "src": "2290:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2261:43:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 12026,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 12025,
                      "name": "_poolId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12007,
                      "src": "2305:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2261:52:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2240:73:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 12028,
                      "name": "nativeReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12010,
                      "src": "2324:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 12030,
                          "name": "_stakingEpoch",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12005,
                          "src": "2367:13:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 12031,
                          "name": "_delegatorStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12003,
                          "src": "2394:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 12032,
                          "name": "validatorStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12013,
                          "src": "2423:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 12033,
                          "name": "totalStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12021,
                          "src": "2451:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 12034,
                              "name": "epochPoolNativeReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9620,
                              "src": "2475:21:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                              }
                            },
                            "id": 12036,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 12035,
                              "name": "_stakingEpoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12005,
                              "src": "2497:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2475:36:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 12038,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 12037,
                            "name": "_poolId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12007,
                            "src": "2512:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2475:45:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 12029,
                        "name": "delegatorShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10951,
                        "src": "2339:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,uint256,uint256) view returns (uint256)"
                        }
                      },
                      "id": 12039,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2339:191:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2324:206:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12041,
                  "nodeType": "ExpressionStatement",
                  "src": "2324:206:13"
                }
              ]
            },
            "documentation": "@dev Returns the reward amount in native coins for\n some delegator with the specified stake amount placed into the specified\n pool before the specified staking epoch. Used by the `StakingAuRa.claimReward` function.\n @param _delegatorStake The stake amount placed by some delegator into the `_poolId` pool.\n @param _stakingEpoch The serial number of staking epoch.\n @param _poolId The pool id.\n @return `uint256 nativeReward` - the reward amount in native coins.",
            "id": 12043,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDelegatorReward",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12003,
                  "name": "_delegatorStake",
                  "nodeType": "VariableDeclaration",
                  "scope": 12043,
                  "src": "2009:23:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12002,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2009:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12005,
                  "name": "_stakingEpoch",
                  "nodeType": "VariableDeclaration",
                  "scope": 12043,
                  "src": "2042:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12004,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2042:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12007,
                  "name": "_poolId",
                  "nodeType": "VariableDeclaration",
                  "scope": 12043,
                  "src": "2073:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12006,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2073:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1999:95:13"
            },
            "returnParameters": {
              "id": 12011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12010,
                  "name": "nativeReward",
                  "nodeType": "VariableDeclaration",
                  "scope": 12043,
                  "src": "2117:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12009,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2117:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2116:22:13"
            },
            "scope": 12120,
            "src": "1972:565:13",
            "stateMutability": "view",
            "superFunction": 16129,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12081,
              "nodeType": "Block",
              "src": "3038:369:13",
              "statements": [
                {
                  "assignments": [
                    12053
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12053,
                      "name": "validatorStake",
                      "nodeType": "VariableDeclaration",
                      "scope": 12081,
                      "src": "3048:22:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12052,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3048:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12059,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 12054,
                        "name": "snapshotPoolValidatorStakeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9654,
                        "src": "3073:32:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                        }
                      },
                      "id": 12056,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 12055,
                        "name": "_stakingEpoch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12045,
                        "src": "3106:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3073:47:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 12058,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 12057,
                      "name": "_poolId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12047,
                      "src": "3121:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3073:56:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3048:81:13"
                },
                {
                  "assignments": [
                    12061
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12061,
                      "name": "totalStake",
                      "nodeType": "VariableDeclaration",
                      "scope": 12081,
                      "src": "3139:18:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12060,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3139:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12067,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 12062,
                        "name": "snapshotPoolTotalStakeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9648,
                        "src": "3160:28:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                        }
                      },
                      "id": 12064,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 12063,
                        "name": "_stakingEpoch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12045,
                        "src": "3189:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3160:43:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 12066,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 12065,
                      "name": "_poolId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12047,
                      "src": "3204:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3160:52:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3139:73:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 12068,
                      "name": "nativeReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12050,
                      "src": "3223:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 12070,
                          "name": "_stakingEpoch",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12045,
                          "src": "3266:13:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 12071,
                          "name": "validatorStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12053,
                          "src": "3293:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 12072,
                          "name": "totalStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12061,
                          "src": "3321:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 12073,
                              "name": "epochPoolNativeReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9620,
                              "src": "3345:21:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                              }
                            },
                            "id": 12075,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 12074,
                              "name": "_stakingEpoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12045,
                              "src": "3367:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3345:36:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 12077,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 12076,
                            "name": "_poolId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12047,
                            "src": "3382:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3345:45:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 12069,
                        "name": "validatorShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11028,
                        "src": "3238:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,uint256) view returns (uint256)"
                        }
                      },
                      "id": 12078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3238:162:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3223:177:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12080,
                  "nodeType": "ExpressionStatement",
                  "src": "3223:177:13"
                }
              ]
            },
            "documentation": "@dev Returns the reward amount in native coins for\n the specified validator and for the specified staking epoch.\n Used by the `StakingAuRa.claimReward` function.\n @param _stakingEpoch The serial number of staking epoch.\n @param _poolId The pool id.\n @return `uint256 nativeReward` - the reward amount in native coins.",
            "id": 12082,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValidatorReward",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12045,
                  "name": "_stakingEpoch",
                  "nodeType": "VariableDeclaration",
                  "scope": 12082,
                  "src": "2941:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12044,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2941:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12047,
                  "name": "_poolId",
                  "nodeType": "VariableDeclaration",
                  "scope": 12082,
                  "src": "2972:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12046,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2972:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2931:62:13"
            },
            "returnParameters": {
              "id": 12051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12050,
                  "name": "nativeReward",
                  "nodeType": "VariableDeclaration",
                  "scope": 12082,
                  "src": "3016:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12049,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3016:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3015:22:13"
            },
            "scope": 12120,
            "src": "2904:503:13",
            "stateMutability": "view",
            "superFunction": 16138,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12098,
              "nodeType": "Block",
              "src": "4042:96:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12093,
                        "name": "_stakingEpoch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12084,
                        "src": "4076:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12094,
                        "name": "_validators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12087,
                        "src": "4091:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12095,
                        "name": "NATIVE_COIN_INFLATION_RATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11986,
                        "src": "4104:26:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12092,
                      "name": "_inflationAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11625,
                      "src": "4059:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256[] memory,uint256) view returns (uint256)"
                      }
                    },
                    "id": 12096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4059:72:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12091,
                  "id": 12097,
                  "nodeType": "Return",
                  "src": "4052:79:13"
                }
              ]
            },
            "documentation": "@dev Calculates and returns inflation amount based on the specified\n staking epoch and validator set. Uses NATIVE_COIN_INFLATION_RATE constant.\n Used by `_distributeNativeRewards` internal function.\n @param _stakingEpoch The number of the current staking epoch.\n @param _validators The array of the current validators (their pool ids).",
            "id": 12099,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_coinInflationAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12084,
                  "name": "_stakingEpoch",
                  "nodeType": "VariableDeclaration",
                  "scope": 12099,
                  "src": "3945:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12083,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3945:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12087,
                  "name": "_validators",
                  "nodeType": "VariableDeclaration",
                  "scope": 12099,
                  "src": "3976:28:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12085,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3976:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 12086,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3976:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3935:75:13"
            },
            "returnParameters": {
              "id": 12091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12090,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12099,
                  "src": "4033:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12089,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4033:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4032:9:13"
            },
            "scope": 12120,
            "src": "3906:232:13",
            "stateMutability": "view",
            "superFunction": 11044,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 12118,
              "nodeType": "Block",
              "src": "4281:7:13",
              "statements": []
            },
            "documentation": null,
            "id": 12119,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_distributeTokenRewards",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12101,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12119,
                  "src": "4186:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4186:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12103,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12119,
                  "src": "4195:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4195:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12105,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12119,
                  "src": "4204:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4204:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12107,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12119,
                  "src": "4213:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12106,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4213:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12110,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12119,
                  "src": "4222:16:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12108,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4222:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 12109,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4222:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12113,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12119,
                  "src": "4240:16:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12111,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4240:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 12112,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4240:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12115,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12119,
                  "src": "4258:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12114,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4258:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4176:95:13"
            },
            "returnParameters": {
              "id": 12117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4281:0:13"
            },
            "scope": 12120,
            "src": "4144:144:13",
            "stateMutability": "nonpayable",
            "superFunction": 11236,
            "visibility": "internal"
          }
        ],
        "scope": 12121,
        "src": "113:4178:13"
      }
    ],
    "src": "0:4292:13"
  },
  "legacyAST": {
    "absolutePath": "/Users/akshaypatil/Documents/etherlite/pos-contracts/posdao-etherlite/contracts/base/BlockRewardAuRaCoins.sol",
    "exportedSymbols": {
      "BlockRewardAuRaCoins": [
        12120
      ]
    },
    "id": 12121,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11977,
        "literals": [
          "solidity",
          "0.5",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:13"
      },
      {
        "absolutePath": "/Users/akshaypatil/Documents/etherlite/pos-contracts/posdao-etherlite/contracts/base/BlockRewardAuRaBase.sol",
        "file": "./BlockRewardAuRaBase.sol",
        "id": 11978,
        "nodeType": "ImportDirective",
        "scope": 12121,
        "sourceUnit": 11976,
        "src": "25:35:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/akshaypatil/Documents/etherlite/pos-contracts/posdao-etherlite/contracts/interfaces/IBlockRewardAuRaCoins.sol",
        "file": "../interfaces/IBlockRewardAuRaCoins.sol",
        "id": 11979,
        "nodeType": "ImportDirective",
        "scope": 12121,
        "sourceUnit": 16140,
        "src": "61:49:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11980,
              "name": "BlockRewardAuRaBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11975,
              "src": "146:19:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BlockRewardAuRaBase_$11975",
                "typeString": "contract BlockRewardAuRaBase"
              }
            },
            "id": 11981,
            "nodeType": "InheritanceSpecifier",
            "src": "146:19:13"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11982,
              "name": "IBlockRewardAuRaCoins",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16139,
              "src": "167:21:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IBlockRewardAuRaCoins_$16139",
                "typeString": "contract IBlockRewardAuRaCoins"
              }
            },
            "id": 11983,
            "nodeType": "InheritanceSpecifier",
            "src": "167:21:13"
          }
        ],
        "contractDependencies": [
          11975,
          16109,
          16139,
          18959,
          19026
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 12120,
        "linearizedBaseContracts": [
          12120,
          16139,
          11975,
          16109,
          19026,
          18959
        ],
        "name": "BlockRewardAuRaCoins",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 11986,
            "name": "NATIVE_COIN_INFLATION_RATE",
            "nodeType": "VariableDeclaration",
            "scope": 12120,
            "src": "653:69:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11984,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "653:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "33373530303030303030303030303030",
              "id": 11985,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "706:16:13",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3750000000000000_by_1",
                "typeString": "int_const 3750000000000000"
              },
              "value": "3750000000000000"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 12000,
              "nodeType": "Block",
              "src": "1276:57:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11996,
                        "name": "_nativeCoins",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11988,
                        "src": "1308:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11997,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11990,
                        "src": "1322:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 11995,
                      "name": "_transferNativeReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11974,
                      "src": "1286:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_payable_$returns$__$",
                        "typeString": "function (uint256,address payable)"
                      }
                    },
                    "id": 11998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1286:40:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11999,
                  "nodeType": "ExpressionStatement",
                  "src": "1286:40:13"
                }
              ]
            },
            "documentation": "@dev Called by the `StakingAuRa.claimReward` function to transfer native coins\n from the balance of the `BlockRewardAuRa` contract to the specified address as a reward.\n @param _nativeCoins The amount of native coins to transfer as a reward.\n @param _to The target address to transfer the amounts to.",
            "id": 12001,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 11993,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 11992,
                  "name": "onlyStakingContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9734,
                  "src": "1256:19:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1256:19:13"
              }
            ],
            "name": "transferReward",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11988,
                  "name": "_nativeCoins",
                  "nodeType": "VariableDeclaration",
                  "scope": 12001,
                  "src": "1204:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11987,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1204:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11990,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 12001,
                  "src": "1226:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 11989,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1226:15:13",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1203:43:13"
            },
            "returnParameters": {
              "id": 11994,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1276:0:13"
            },
            "scope": 12120,
            "src": "1180:153:13",
            "stateMutability": "nonpayable",
            "superFunction": 16118,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12042,
              "nodeType": "Block",
              "src": "2139:398:13",
              "statements": [
                {
                  "assignments": [
                    12013
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12013,
                      "name": "validatorStake",
                      "nodeType": "VariableDeclaration",
                      "scope": 12042,
                      "src": "2149:22:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12012,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2149:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12019,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 12014,
                        "name": "snapshotPoolValidatorStakeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9654,
                        "src": "2174:32:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                        }
                      },
                      "id": 12016,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 12015,
                        "name": "_stakingEpoch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12005,
                        "src": "2207:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2174:47:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 12018,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 12017,
                      "name": "_poolId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12007,
                      "src": "2222:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2174:56:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2149:81:13"
                },
                {
                  "assignments": [
                    12021
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12021,
                      "name": "totalStake",
                      "nodeType": "VariableDeclaration",
                      "scope": 12042,
                      "src": "2240:18:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12020,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2240:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12027,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 12022,
                        "name": "snapshotPoolTotalStakeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9648,
                        "src": "2261:28:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                        }
                      },
                      "id": 12024,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 12023,
                        "name": "_stakingEpoch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12005,
                        "src": "2290:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2261:43:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 12026,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 12025,
                      "name": "_poolId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12007,
                      "src": "2305:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2261:52:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2240:73:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 12028,
                      "name": "nativeReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12010,
                      "src": "2324:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 12030,
                          "name": "_stakingEpoch",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12005,
                          "src": "2367:13:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 12031,
                          "name": "_delegatorStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12003,
                          "src": "2394:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 12032,
                          "name": "validatorStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12013,
                          "src": "2423:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 12033,
                          "name": "totalStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12021,
                          "src": "2451:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 12034,
                              "name": "epochPoolNativeReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9620,
                              "src": "2475:21:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                              }
                            },
                            "id": 12036,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 12035,
                              "name": "_stakingEpoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12005,
                              "src": "2497:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2475:36:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 12038,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 12037,
                            "name": "_poolId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12007,
                            "src": "2512:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2475:45:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 12029,
                        "name": "delegatorShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10951,
                        "src": "2339:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,uint256,uint256) view returns (uint256)"
                        }
                      },
                      "id": 12039,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2339:191:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2324:206:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12041,
                  "nodeType": "ExpressionStatement",
                  "src": "2324:206:13"
                }
              ]
            },
            "documentation": "@dev Returns the reward amount in native coins for\n some delegator with the specified stake amount placed into the specified\n pool before the specified staking epoch. Used by the `StakingAuRa.claimReward` function.\n @param _delegatorStake The stake amount placed by some delegator into the `_poolId` pool.\n @param _stakingEpoch The serial number of staking epoch.\n @param _poolId The pool id.\n @return `uint256 nativeReward` - the reward amount in native coins.",
            "id": 12043,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDelegatorReward",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12003,
                  "name": "_delegatorStake",
                  "nodeType": "VariableDeclaration",
                  "scope": 12043,
                  "src": "2009:23:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12002,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2009:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12005,
                  "name": "_stakingEpoch",
                  "nodeType": "VariableDeclaration",
                  "scope": 12043,
                  "src": "2042:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12004,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2042:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12007,
                  "name": "_poolId",
                  "nodeType": "VariableDeclaration",
                  "scope": 12043,
                  "src": "2073:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12006,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2073:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1999:95:13"
            },
            "returnParameters": {
              "id": 12011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12010,
                  "name": "nativeReward",
                  "nodeType": "VariableDeclaration",
                  "scope": 12043,
                  "src": "2117:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12009,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2117:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2116:22:13"
            },
            "scope": 12120,
            "src": "1972:565:13",
            "stateMutability": "view",
            "superFunction": 16129,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12081,
              "nodeType": "Block",
              "src": "3038:369:13",
              "statements": [
                {
                  "assignments": [
                    12053
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12053,
                      "name": "validatorStake",
                      "nodeType": "VariableDeclaration",
                      "scope": 12081,
                      "src": "3048:22:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12052,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3048:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12059,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 12054,
                        "name": "snapshotPoolValidatorStakeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9654,
                        "src": "3073:32:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                        }
                      },
                      "id": 12056,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 12055,
                        "name": "_stakingEpoch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12045,
                        "src": "3106:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3073:47:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 12058,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 12057,
                      "name": "_poolId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12047,
                      "src": "3121:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3073:56:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3048:81:13"
                },
                {
                  "assignments": [
                    12061
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12061,
                      "name": "totalStake",
                      "nodeType": "VariableDeclaration",
                      "scope": 12081,
                      "src": "3139:18:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12060,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3139:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12067,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 12062,
                        "name": "snapshotPoolTotalStakeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9648,
                        "src": "3160:28:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                        }
                      },
                      "id": 12064,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 12063,
                        "name": "_stakingEpoch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12045,
                        "src": "3189:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3160:43:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 12066,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 12065,
                      "name": "_poolId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12047,
                      "src": "3204:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3160:52:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3139:73:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 12068,
                      "name": "nativeReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12050,
                      "src": "3223:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 12070,
                          "name": "_stakingEpoch",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12045,
                          "src": "3266:13:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 12071,
                          "name": "validatorStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12053,
                          "src": "3293:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 12072,
                          "name": "totalStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12061,
                          "src": "3321:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 12073,
                              "name": "epochPoolNativeReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9620,
                              "src": "3345:21:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                              }
                            },
                            "id": 12075,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 12074,
                              "name": "_stakingEpoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12045,
                              "src": "3367:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3345:36:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 12077,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 12076,
                            "name": "_poolId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12047,
                            "src": "3382:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3345:45:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 12069,
                        "name": "validatorShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11028,
                        "src": "3238:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,uint256) view returns (uint256)"
                        }
                      },
                      "id": 12078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3238:162:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3223:177:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12080,
                  "nodeType": "ExpressionStatement",
                  "src": "3223:177:13"
                }
              ]
            },
            "documentation": "@dev Returns the reward amount in native coins for\n the specified validator and for the specified staking epoch.\n Used by the `StakingAuRa.claimReward` function.\n @param _stakingEpoch The serial number of staking epoch.\n @param _poolId The pool id.\n @return `uint256 nativeReward` - the reward amount in native coins.",
            "id": 12082,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValidatorReward",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12045,
                  "name": "_stakingEpoch",
                  "nodeType": "VariableDeclaration",
                  "scope": 12082,
                  "src": "2941:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12044,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2941:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12047,
                  "name": "_poolId",
                  "nodeType": "VariableDeclaration",
                  "scope": 12082,
                  "src": "2972:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12046,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2972:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2931:62:13"
            },
            "returnParameters": {
              "id": 12051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12050,
                  "name": "nativeReward",
                  "nodeType": "VariableDeclaration",
                  "scope": 12082,
                  "src": "3016:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12049,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3016:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3015:22:13"
            },
            "scope": 12120,
            "src": "2904:503:13",
            "stateMutability": "view",
            "superFunction": 16138,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12098,
              "nodeType": "Block",
              "src": "4042:96:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12093,
                        "name": "_stakingEpoch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12084,
                        "src": "4076:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12094,
                        "name": "_validators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12087,
                        "src": "4091:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12095,
                        "name": "NATIVE_COIN_INFLATION_RATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11986,
                        "src": "4104:26:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12092,
                      "name": "_inflationAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11625,
                      "src": "4059:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256[] memory,uint256) view returns (uint256)"
                      }
                    },
                    "id": 12096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4059:72:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12091,
                  "id": 12097,
                  "nodeType": "Return",
                  "src": "4052:79:13"
                }
              ]
            },
            "documentation": "@dev Calculates and returns inflation amount based on the specified\n staking epoch and validator set. Uses NATIVE_COIN_INFLATION_RATE constant.\n Used by `_distributeNativeRewards` internal function.\n @param _stakingEpoch The number of the current staking epoch.\n @param _validators The array of the current validators (their pool ids).",
            "id": 12099,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_coinInflationAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12084,
                  "name": "_stakingEpoch",
                  "nodeType": "VariableDeclaration",
                  "scope": 12099,
                  "src": "3945:21:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12083,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3945:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12087,
                  "name": "_validators",
                  "nodeType": "VariableDeclaration",
                  "scope": 12099,
                  "src": "3976:28:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12085,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3976:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 12086,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3976:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3935:75:13"
            },
            "returnParameters": {
              "id": 12091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12090,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12099,
                  "src": "4033:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12089,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4033:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4032:9:13"
            },
            "scope": 12120,
            "src": "3906:232:13",
            "stateMutability": "view",
            "superFunction": 11044,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 12118,
              "nodeType": "Block",
              "src": "4281:7:13",
              "statements": []
            },
            "documentation": null,
            "id": 12119,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_distributeTokenRewards",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12101,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12119,
                  "src": "4186:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4186:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12103,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12119,
                  "src": "4195:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4195:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12105,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12119,
                  "src": "4204:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4204:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12107,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12119,
                  "src": "4213:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12106,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4213:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12110,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12119,
                  "src": "4222:16:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12108,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4222:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 12109,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4222:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12113,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12119,
                  "src": "4240:16:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12111,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4240:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 12112,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4240:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12115,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 12119,
                  "src": "4258:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12114,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4258:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4176:95:13"
            },
            "returnParameters": {
              "id": 12117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4281:0:13"
            },
            "scope": 12120,
            "src": "4144:144:13",
            "stateMutability": "nonpayable",
            "superFunction": 11236,
            "visibility": "internal"
          }
        ],
        "scope": 12121,
        "src": "113:4178:13"
      }
    ],
    "src": "0:4292:13"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.10+commit.5a6ea5b1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.1",
  "updatedAt": "2021-04-11T17:55:35.995Z",
  "devdoc": {
    "methods": {
      "addBridgeNativeFeeReceivers(uint256)": {
        "details": "An alias for `addBridgeNativeRewardReceivers` (for backward compatibility with the previous bridge contract)."
      },
      "addBridgeNativeRewardReceivers(uint256)": {
        "details": "Called by the `erc-to-native` bridge contract when a portion of the bridge fee/reward should be minted and distributed to participants (validators and their delegators) in native coins. The specified amount is used by the `_distributeRewards` function.",
        "params": {
          "_amount": "The fee/reward amount distributed to participants."
        }
      },
      "addExtraReceiver(uint256,address)": {
        "details": "Called by the `erc-to-native` bridge contract when the bridge needs to mint a specified amount of native coins for a specified address using the `reward` function.",
        "params": {
          "_amount": "The amount of native coins which must be minted for the `_receiver` address.",
          "_receiver": "The address for which the `_amount` of native coins must be minted."
        }
      },
      "blockRewardContractId()": {
        "details": "Returns an identifier for the bridge contract so that the latter could ensure it works with the BlockReward contract."
      },
      "clearBlocksCreated()": {
        "details": "Called by the `ValidatorSetAuRa.finalizeChange` to clear the values in the `blocksCreated` mapping for the current staking epoch and a new validator set."
      },
      "currentNativeRewardToDistribute(address,uint256,uint256,uint256,uint256[])": {
        "details": "Calculates the current total reward in native coins which is going to be distributed among validator pools once the current staking epoch finishes. Its value can differ from block to block since the reward can increase in time due to bridge's fees. Used by the `_distributeNativeRewards` internal function but can also be used by any external user.",
        "params": {
          "_stakingContract": "The address of StakingAuRa contract.",
          "_stakingEpoch": "The number of the current staking epoch.",
          "_totalRewardShareDenom": "The value returned by the `_rewardShareNumDenom` internal function. Set it to zero to calculate `_totalRewardShareNum` and `_totalRewardShareDenom` automatically.",
          "_totalRewardShareNum": "The value returned by the `_rewardShareNumDenom` internal function. Ignored if the `_totalRewardShareDenom` param is zero.",
          "_validators": "The array of the current validators. Leave it empty to get the array automatically."
        },
        "return": "`uint256 rewardToDistribute` - The current total reward in native coins to distribute. `uint256 totalReward` - The current total reward in native coins. Can be greater or equal to `rewardToDistribute` depending on chain's health (how soon validator set change was finalized after beginning of staking epoch). Usually equals to `rewardToDistribute`. Used internally by the `_distributeNativeRewards` function."
      },
      "currentPoolRewards(uint256,uint256[],uint256,uint256)": {
        "details": "Calculates and returns an array of validator pool rewards. Each returned item represents a pool reward for each corresponding item returned by `ValidatorSetAuRa.getValidators` getter. Used by the `_distributeNativeRewards` and `_distributeTokenRewards` internal functions but can also be used by any external user.",
        "params": {
          "_blocksCreatedShareDenom": "The value returned by the `_blocksShareNumDenom` internal function. Set it to zero to calculate `_blocksCreatedShareNum` and `_blocksCreatedShareDenom` automatically.",
          "_blocksCreatedShareNum": "The array returned by the `_blocksShareNumDenom` internal function. Ignored if `_blocksCreatedShareDenom` is zero.",
          "_rewardToDistribute": "The amount to distribute calculated by the `currentNativeRewardToDistribute` or `currentTokenRewardToDistribute` functions.",
          "_stakingEpoch": "The number of the current staking epoch."
        }
      },
      "delegatorShare(uint256,uint256,uint256,uint256,uint256)": {
        "details": "Calculates delegator's share for the given pool reward amount and the specified staking epoch. Used by the `StakingAuRa.claimReward` function.",
        "params": {
          "_delegatorStaked": "The amount staked by a delegator.",
          "_poolReward": "The value of pool reward.",
          "_stakingEpoch": "The number of staking epoch.",
          "_totalStaked": "The total amount staked by a validator and their delegators.",
          "_validatorStaked": "The amount staked by a validator."
        }
      },
      "epochsPoolGotRewardFor(uint256)": {
        "details": "Returns an array of epoch numbers for which the specified pool got a non-zero reward."
      },
      "epochsToClaimRewardFrom(address,address)": {
        "details": "Returns an array of epoch numbers for which the specified staker can claim a reward from the specified pool by the `StakingAuRa.claimReward` function.",
        "params": {
          "_poolStakingAddress": "The pool staking address.",
          "_staker": "The staker's address (delegator or candidate/validator)."
        }
      },
      "ercToNativeBridgesAllowed()": {
        "details": "Returns the array of `erc-to-native` bridge addresses set by the `setErcToNativeBridgesAllowed` setter."
      },
      "extraReceiversQueueSize()": {
        "details": "Returns the current size of the address queue created by the `addExtraReceiver` function."
      },
      "getDelegatorReward(uint256,uint256,uint256)": {
        "details": "Returns the reward amount in native coins for some delegator with the specified stake amount placed into the specified pool before the specified staking epoch. Used by the `StakingAuRa.claimReward` function.",
        "params": {
          "_delegatorStake": "The stake amount placed by some delegator into the `_poolId` pool.",
          "_poolId": "The pool id.",
          "_stakingEpoch": "The serial number of staking epoch."
        },
        "return": "`uint256 nativeReward` - the reward amount in native coins."
      },
      "getValidatorReward(uint256,uint256)": {
        "details": "Returns the reward amount in native coins for the specified validator and for the specified staking epoch. Used by the `StakingAuRa.claimReward` function.",
        "params": {
          "_poolId": "The pool id.",
          "_stakingEpoch": "The serial number of staking epoch."
        },
        "return": "`uint256 nativeReward` - the reward amount in native coins."
      },
      "initialize(address,address)": {
        "details": "Initializes the contract at network startup. Can only be called by the constructor of the `InitializerAuRa` contract or owner.",
        "params": {
          "_prevBlockReward": "The address of the previous BlockReward contract (for statistics migration purposes).",
          "_validatorSet": "The address of the `ValidatorSetAuRa` contract."
        }
      },
      "isInitialized()": {
        "details": "Returns a boolean flag indicating if the `initialize` function has been called."
      },
      "onTokenTransfer(address,uint256,bytes)": {
        "details": "Prevents sending tokens directly to the `BlockRewardAuRa` contract address by the `ERC677BridgeTokenRewardable.transferAndCall` function."
      },
      "reward(address[],uint16[])": {
        "details": "Called by the validator's node when producing and closing a block, see https://openethereum.github.io/Block-Reward-Contract.html. This function performs all of the automatic operations needed for controlling numbers revealing by validators, accumulating block producing statistics, starting a new staking epoch, snapshotting staking amounts for the upcoming staking epoch, rewards distributing at the end of a staking epoch, and minting native coins needed for the `erc-to-native` bridge. The function has unlimited gas (according to OpenEthereum and/or Nethermind client code)."
      },
      "setErcToNativeBridgesAllowed(address[])": {
        "details": "Sets the array of `erc-to-native` bridge addresses which are allowed to call some of the functions with the `onlyErcToNativeBridge` modifier. This setter can only be called by the `owner`.",
        "params": {
          "_bridgesAllowed": "The array of bridge addresses."
        }
      },
      "transferReward(uint256,address)": {
        "details": "Called by the `StakingAuRa.claimReward` function to transfer native coins from the balance of the `BlockRewardAuRa` contract to the specified address as a reward.",
        "params": {
          "_nativeCoins": "The amount of native coins to transfer as a reward.",
          "_to": "The target address to transfer the amounts to."
        }
      },
      "validatorRewardPercent(uint256)": {
        "details": "Returns the reward coefficient for the specified validator. The given value should be divided by 10000 to get the value of the reward percent (since EVM doesn't support float values). If the specified pool id is an id of a candidate that is not about to be a validator on the current staking epoch, the potentially possible reward coefficient is returned.",
        "params": {
          "_poolId": "The id of the validator/candidate pool for which the getter must return the coefficient."
        }
      },
      "validatorShare(uint256,uint256,uint256,uint256)": {
        "details": "Calculates validator's share for the given pool reward amount and the specified staking epoch. Used by the `validatorRewardPercent` and `StakingAuRa.claimReward` functions.",
        "params": {
          "_poolReward": "The value of pool reward.",
          "_stakingEpoch": "The number of staking epoch.",
          "_totalStaked": "The total amount staked by a validator and their delegators.",
          "_validatorStaked": "The amount staked by a validator."
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}